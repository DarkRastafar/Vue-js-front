{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = {\n  class: \"table table-sm table-striped\"\n};\nvar _hoisted_2 = {\n  class: \"table-dark\"\n};\nvar _hoisted_3 = {\n  class: \"cell\"\n};\nvar _hoisted_4 = [\"value\"];\nvar _hoisted_5 = {\n  class: \"cell\"\n};\nvar _hoisted_6 = [\"value\"];\nvar _hoisted_7 = {\n  class: \"cell\"\n};\nvar _hoisted_8 = [\"value\"];\nvar _hoisted_9 = {\n  class: \"cell\"\n};\nvar _hoisted_10 = [\"value\"];\nvar _hoisted_11 = {\n  class: \"cell\"\n};\nvar _hoisted_12 = [\"value\"];\nvar _hoisted_13 = {\n  class: \"cell\"\n};\nvar _hoisted_14 = [\"value\"];\n\nvar _hoisted_15 = /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"cell\"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"cell\"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_17 = {\n  class: \"cell\"\n};\nvar _hoisted_18 = [\"value\"];\n\nvar _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"cell\"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_20 = /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"cell\"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_21 = {\n  class: \"cell\"\n};\nvar _hoisted_22 = [\"value\"];\n\nvar _hoisted_23 = /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"cell\"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_24 = /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"cell\"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_25 = {\n  class: \"cell\"\n};\nvar _hoisted_26 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_bankes = _resolveComponent(\"bankes\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_bankes), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.howClients, function (index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"container fluid\",\n      key: index\n    }, [_createElementVNode(\"table\", _hoisted_1, [_createElementVNode(\"thead\", _hoisted_2, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.firstTableHeaders[0].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_3, [_createElementVNode(\"textarea\", {\n      value: _ctx.firstTableBody[Number(index - 1)].id\n    }, null, 8\n    /* PROPS */\n    , _hoisted_4)]), _createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.secondTableHeaders[0].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_5, [_createElementVNode(\"textarea\", {\n      value: _ctx.secondTableBody[Number(index - 1)].inn\n    }, null, 8\n    /* PROPS */\n    , _hoisted_6)])]), _createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.firstTableHeaders[1].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_7, [_createElementVNode(\"textarea\", {\n      value: _ctx.firstTableBody[Number(index - 1)].alfa_status_inn\n    }, null, 8\n    /* PROPS */\n    , _hoisted_8)]), _createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.secondTableHeaders[1].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_9, [_createElementVNode(\"textarea\", {\n      value: _ctx.secondTableBody[Number(index - 1)].name_company\n    }, null, 8\n    /* PROPS */\n    , _hoisted_10)])]), _createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.firstTableHeaders[2].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_11, [_createElementVNode(\"textarea\", {\n      value: _ctx.firstTableBody[Number(index - 1)].alfa_bank_response\n    }, null, 8\n    /* PROPS */\n    , _hoisted_12)]), _createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.secondTableHeaders[2].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_13, [_createElementVNode(\"textarea\", {\n      value: _ctx.secondTableBody[Number(index - 1)].surname\n    }, null, 8\n    /* PROPS */\n    , _hoisted_14)])]), _createElementVNode(\"tr\", null, [_hoisted_15, _hoisted_16, _createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.secondTableHeaders[3].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_17, [_createElementVNode(\"textarea\", {\n      value: _ctx.secondTableBody[Number(index - 1)].first_name\n    }, null, 8\n    /* PROPS */\n    , _hoisted_18)])]), _createElementVNode(\"tr\", null, [_hoisted_19, _hoisted_20, _createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.secondTableHeaders[4].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_21, [_createElementVNode(\"textarea\", {\n      value: _ctx.secondTableBody[Number(index - 1)].id\n    }, null, 8\n    /* PROPS */\n    , _hoisted_22)])]), _createElementVNode(\"tr\", null, [_hoisted_23, _hoisted_24, _createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.secondTableHeaders[5].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_25, [_createElementVNode(\"textarea\", {\n      value: _ctx.secondTableBody[Number(index - 1)].id\n    }, null, 8\n    /* PROPS */\n    , _hoisted_26)])])])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createVNode","_component_bankes","_createElementBlock","_Fragment","_renderList","$options","index","key","_toDisplayString","_ctx","value","Number","id","inn","alfa_status_inn","name_company","alfa_bank_response","surname","_hoisted_15","_hoisted_16","first_name","_hoisted_19","_hoisted_20","_hoisted_23","_hoisted_24"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\BodyTable.vue"],"sourcesContent":["<template>\r\n  <bankes/>\r\n\r\n  <div class=\"container fluid\" v-for=\"index in howClients\" :key=\"index\">\r\n    <table class=\"table table-sm table-striped\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n\r\n          <th><p>{{ firstTableHeaders[0].value }}</p></th>\r\n          <th class=\"cell\">\r\n            <textarea :value=\"firstTableBody[Number(index - 1)].id\"/>\r\n          </th>\r\n\r\n          <th><p>{{ secondTableHeaders[0].value }}</p></th>\r\n          <th class=\"cell\">\r\n            <textarea :value=\"secondTableBody[Number(index - 1)].inn\"/>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n\r\n          <th><p>{{ firstTableHeaders[1].value }}</p></th>\r\n           <th class=\"cell\">\r\n            <textarea :value=\"firstTableBody[Number(index - 1)].alfa_status_inn\"/>\r\n          </th>\r\n\r\n          <th><p>{{ secondTableHeaders[1].value }}</p></th>\r\n          <th class=\"cell\">\r\n            <textarea :value=\"secondTableBody[Number(index - 1)].name_company\"/>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n\r\n          <th><p>{{ firstTableHeaders[2].value }}</p></th>\r\n           <th class=\"cell\">\r\n            <textarea :value=\"firstTableBody[Number(index - 1)].alfa_bank_response\"/>\r\n          </th>\r\n\r\n          <th><p>{{ secondTableHeaders[2].value }}</p></th>\r\n          <th class=\"cell\">\r\n            <textarea :value=\"secondTableBody[Number(index - 1)].surname\"/>\r\n          </th>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th class=\"cell\"></th>\r\n          <th class=\"cell\"></th>\r\n          <th><p>{{ secondTableHeaders[3].value }}</p></th>\r\n          <th class=\"cell\">\r\n            <textarea :value=\"secondTableBody[Number(index - 1)].first_name\"/>\r\n          </th>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th class=\"cell\"></th>\r\n          <th class=\"cell\"></th>\r\n          <th><p>{{ secondTableHeaders[4].value }}</p></th>\r\n          <th class=\"cell\">\r\n            <textarea :value=\"secondTableBody[Number(index - 1)].id\"/>\r\n          </th>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th class=\"cell\"></th>\r\n          <th class=\"cell\"></th>\r\n          <th><p>{{ secondTableHeaders[5].value }}</p></th>\r\n          <th class=\"cell\">\r\n            <textarea :value=\"secondTableBody[Number(index - 1)].id\"/>\r\n          </th>\r\n        </tr>\r\n\r\n      </thead>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n  import bankes from '@/components/bankes.vue'\r\n  import { mapGetters, mapActions } from 'vuex'\r\n\r\n  export default {\r\n      name: 'bodyTable',\r\n      data() {\r\n        return {\r\n          clientsPerPage: 1,\r\n          pageNumber: 1,\r\n          displayPages: 3,\r\n        }\r\n      },\r\n      components: {\r\n        bankes,\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"firstTableHeaders\", \"secondTableHeaders\", \"thirdTableHeaders\", \"firstTableBody\", \"secondTableBody\", \"thirdTableBody\"]),\r\n\r\n        howClients () {\r\n          return (this.secondTableBody.length)\r\n        },\r\n\r\n        // pages () {\r\n        //   return Math.ceil(this.allClients.length / this.clientsPerPage)\r\n        // },\r\n        // paginatedClients () {\r\n        //   let from = (this.pageNumber -1) * this.clientsPerPage;\r\n        //   let to = from + this.clientsPerPage;\r\n        //   return this.allClients.slice(from, to);\r\n        // },\r\n        // displayingPages () {\r\n        //   let new_pages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n        //   let pageArray = []\r\n\r\n        //   for (let step = 1; step < new_pages; step++) {\r\n        //       if (step < this.displayPages + 1){\r\n        //         pageArray.push(step)\r\n        //       } else if (!pageArray.includes('...')) {\r\n        //         pageArray.push('...')\r\n        //       }\r\n        //   }\r\n        //   pageArray.push(new_pages)\r\n        //   return pageArray\r\n        // }\r\n      },\r\n      methods: mapActions(['websocketConnect']),\r\n      methods: {\r\n        UpdateScrollHeight (event) {\r\n          const currentTextareaField = document.getElementById(event.target.id);\r\n          currentTextareaField.style.cssText = `height: ${currentTextareaField, currentTextareaField.scrollHeight}px; overflow-y: hidden`;\r\n        },\r\n        clickPage (page) {\r\n          if (page !== '...'){\r\n            this.pageNumber = page;\r\n          } else {\r\n            this.displayingPages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n          }\r\n          \r\n        },\r\n      },\r\n      async mounted() {\r\n        this.$store.dispatch('websocketConnect');\r\n      }\r\n  }\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th v-for=\"(header, head) in allHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n          <td v-if=\"header.value !== 'username'\">{{header.value}}</td>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\" class=\"container-fluid\" >\r\n        <td v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" class=\"col\" :class=\"fieldName\" :id=\"fieldName\">\r\n          <div>\r\n            <textarea \r\n              v-if=\"fieldName !== 'username_id'\" :id=\"`${Client.id} ${fieldName}`\" v-bind:value=\"field\" :name=\"fieldName\" \r\n              @input=\"UpdateScrollHeight\" @change=\"CreateInput\"\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table> -->\r\n  <!-- <div class=\"v-table__paginator\">\r\n    <div class=\"page\" \r\n        v-for=\"page in displayingPages\" :key=\"page\" :class=\"{'page__selected': page === pageNumber}\" @click=\"clickPage(page)\">\r\n          {{ page }}\r\n        </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"container fluid\"> -->\r\n    <!-- <div class=\"row\"> -->\r\n      <!-- <table class=\"table table-sm table-striped\">\r\n        <tbody>\r\n          <td v-for=\"Client in firstTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in firstTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in secondTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in secondTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\"/>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in thirdTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in thirdTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n        </tbody>\r\n      </table> -->\r\n    <!-- </div> -->\r\n  <!-- </div> -->"]},"metadata":{},"sourceType":"module"}