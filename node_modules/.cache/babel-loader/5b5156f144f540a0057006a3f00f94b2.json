{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _inherits from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { checkAlfabank, returnColFields } from '@/assets/configs/colConfig.js';\n\nvar MutationResponseData = /*#__PURE__*/function () {\n  function MutationResponseData(responseData) {\n    _classCallCheck(this, MutationResponseData);\n\n    this.data = responseData;\n  }\n\n  _createClass(MutationResponseData, [{\n    key: \"getBank\",\n    value: function getBank() {\n      return localStorage.getItem('bank');\n    }\n  }, {\n    key: \"returnEntry\",\n    value: function returnEntry(Entry, bank_name, metaFieldsArray) {\n      var mutationEntry = {};\n\n      for (var _i = 0, _Object$entries = Object.entries(Entry); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        if (metaFieldsArray.includes(key)) {\n          mutationEntry[key.replace(\"\".concat(bank_name, \"_\"), '')] = value;\n        }\n      }\n\n      return mutationEntry;\n    }\n  }]);\n\n  return MutationResponseData;\n}();\n\nvar MutationBody = /*#__PURE__*/function (_MutationResponseData) {\n  _inherits(MutationBody, _MutationResponseData);\n\n  var _super = _createSuper(MutationBody);\n\n  function MutationBody(responseData) {\n    var _this;\n\n    _classCallCheck(this, MutationBody);\n\n    _this = _super.call(this, responseData);\n    _this.bodyData = _this.data.data.body.body;\n    return _this;\n  }\n\n  _createClass(MutationBody, [{\n    key: \"returnMutationDict\",\n    value: function returnMutationDict() {\n      var bank_name = checkAlfabank(this.getBank());\n      var metaFieldsArray = returnColFields(bank_name);\n      var resultClientsList = [];\n\n      var _iterator = _createForOfIteratorHelper(this.bodyData),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var client = _step.value;\n          var mutationClient = this.returnEntry(client, bank_name, metaFieldsArray);\n          resultClientsList.push(mutationClient);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return resultClientsList;\n    }\n  }]);\n\n  return MutationBody;\n}(MutationResponseData);\n\nvar MutationHeaders = /*#__PURE__*/function (_MutationResponseData2) {\n  _inherits(MutationHeaders, _MutationResponseData2);\n\n  var _super2 = _createSuper(MutationHeaders);\n\n  function MutationHeaders(responseData) {\n    var _this2;\n\n    _classCallCheck(this, MutationHeaders);\n\n    _this2 = _super2.call(this, responseData);\n    _this2.headersData = responseData.data.headers;\n    return _this2;\n  }\n\n  return _createClass(MutationHeaders);\n}(MutationResponseData);\n\nexport { MutationResponseData, MutationBody, MutationHeaders };","map":{"version":3,"sources":["C:/current_front/src/assets/mutationResponseData.js"],"names":["checkAlfabank","returnColFields","MutationResponseData","responseData","data","localStorage","getItem","Entry","bank_name","metaFieldsArray","mutationEntry","Object","entries","key","value","includes","replace","MutationBody","bodyData","body","getBank","resultClientsList","client","mutationClient","returnEntry","push","MutationHeaders","headersData","headers"],"mappings":";;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,eAAxB,QAA+C,+BAA/C;;IAGMC,oB;AACF,gCAAaC,YAAb,EAA2B;AAAA;;AACvB,SAAKC,IAAL,GAAYD,YAAZ;AACH;;;;WAED,mBAAU;AACN,aAAOE,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAP;AACH;;;WAED,qBAAaC,KAAb,EAAoBC,SAApB,EAA+BC,eAA/B,EAAgD;AAC5C,UAAIC,aAAa,GAAG,EAApB;;AAEA,yCAA2BC,MAAM,CAACC,OAAP,CAAeL,KAAf,CAA3B,qCAAkD;AAA7C;AAAA,YAAOM,GAAP;AAAA,YAAYC,KAAZ;;AACD,YAAIL,eAAe,CAACM,QAAhB,CAAyBF,GAAzB,CAAJ,EAAmC;AAC/BH,UAAAA,aAAa,CAACG,GAAG,CAACG,OAAJ,WAAeR,SAAf,QAA6B,EAA7B,CAAD,CAAb,GAAkDM,KAAlD;AACH;AACJ;;AACD,aAAOJ,aAAP;AACH;;;;;;IAICO,Y;;;;;AACF,wBAAad,YAAb,EAA2B;AAAA;;AAAA;;AACvB,8BAAMA,YAAN;AACA,UAAKe,QAAL,GAAgB,MAAKd,IAAL,CAAUA,IAAV,CAAee,IAAf,CAAoBA,IAApC;AAFuB;AAG1B;;;;WAED,8BAAsB;AAClB,UAAIX,SAAS,GAAGR,aAAa,CAAC,KAAKoB,OAAL,EAAD,CAA7B;AACA,UAAIX,eAAe,GAAGR,eAAe,CAACO,SAAD,CAArC;AACA,UAAIa,iBAAiB,GAAG,EAAxB;;AAHkB,iDAKC,KAAKH,QALN;AAAA;;AAAA;AAKlB,4DAAkC;AAAA,cAAzBI,MAAyB;AAC9B,cAAIC,cAAc,GAAG,KAAKC,WAAL,CAAiBF,MAAjB,EAAyBd,SAAzB,EAAoCC,eAApC,CAArB;AACAY,UAAAA,iBAAiB,CAACI,IAAlB,CAAuBF,cAAvB;AACH;AARiB;AAAA;AAAA;AAAA;AAAA;;AASlB,aAAOF,iBAAP;AACH;;;;EAhBsBnB,oB;;IAoBrBwB,e;;;;;AACF,2BAAavB,YAAb,EAA2B;AAAA;;AAAA;;AACvB,gCAAMA,YAAN;AACA,WAAKwB,WAAL,GAAmBxB,YAAY,CAACC,IAAb,CAAkBwB,OAArC;AAFuB;AAG1B;;;EAJyB1B,oB;;AAQ9B,SAASA,oBAAT,EAA+Be,YAA/B,EAA6CS,eAA7C","sourcesContent":["import { checkAlfabank, returnColFields } from '@/assets/configs/colConfig.js'\r\n\r\n\r\nclass MutationResponseData {\r\n    constructor (responseData) {\r\n        this.data = responseData\r\n    }\r\n\r\n    getBank() {\r\n        return localStorage.getItem('bank')\r\n    }\r\n\r\n    returnEntry (Entry, bank_name, metaFieldsArray) {\r\n        let mutationEntry = {}\r\n\r\n        for (const [key, value] of Object.entries(Entry)) {\r\n            if (metaFieldsArray.includes(key)) {\r\n                mutationEntry[key.replace(`${bank_name}_`, '')] = value\r\n            }\r\n        }\r\n        return mutationEntry\r\n    }\r\n}\r\n\r\n\r\nclass MutationBody extends MutationResponseData {\r\n    constructor (responseData) {\r\n        super(responseData);\r\n        this.bodyData = this.data.data.body.body\r\n    }\r\n\r\n    returnMutationDict () {\r\n        let bank_name = checkAlfabank(this.getBank())\r\n        let metaFieldsArray = returnColFields(bank_name)\r\n        let resultClientsList = []\r\n\r\n        for (let client of this.bodyData) {\r\n            let mutationClient = this.returnEntry(client, bank_name, metaFieldsArray)\r\n            resultClientsList.push(mutationClient)\r\n        }\r\n        return resultClientsList\r\n    }\r\n}\r\n\r\n\r\nclass MutationHeaders extends MutationResponseData {\r\n    constructor (responseData) {\r\n        super(responseData);\r\n        this.headersData = responseData.data.headers\r\n    }\r\n}\r\n\r\n\r\nexport { MutationResponseData, MutationBody, MutationHeaders };"]},"metadata":{},"sourceType":"module"}