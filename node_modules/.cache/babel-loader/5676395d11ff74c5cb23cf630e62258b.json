{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _inherits from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { checkAlfabank, returnColFields } from '@/assets/configs/colConfig.js';\n\nvar MutationResponseData = /*#__PURE__*/function () {\n  function MutationResponseData(responseData) {\n    _classCallCheck(this, MutationResponseData);\n\n    this.data = responseData;\n  }\n\n  _createClass(MutationResponseData, [{\n    key: \"getBank\",\n    value: function getBank() {\n      return localStorage.getItem('bank');\n    }\n  }, {\n    key: \"returnClient\",\n    value: function returnClient(client, bank_name, metaFieldsArray) {\n      var mutationClient = {};\n\n      for (var _i = 0, _Object$entries = Object.entries(client); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        if (metaFieldsArray.includes(key)) {\n          mutationClient[key.replace(\"\".concat(bank_name, \"_\"), '')] = value;\n        }\n      }\n\n      return mutationClient;\n    }\n  }]);\n\n  return MutationResponseData;\n}();\n\nvar MutationBody = /*#__PURE__*/function (_MutationResponseData) {\n  _inherits(MutationBody, _MutationResponseData);\n\n  var _super = _createSuper(MutationBody);\n\n  function MutationBody(responseData) {\n    var _this;\n\n    _classCallCheck(this, MutationBody);\n\n    _this = _super.call(this, responseData);\n    _this.bodyData = _this.data.data.body.body;\n    return _this;\n  }\n\n  _createClass(MutationBody, [{\n    key: \"returnMutationDict\",\n    value: function returnMutationDict() {\n      var bank_name = checkAlfabank(this.getBank());\n      var metaFieldsArray = returnColFields(bank_name);\n      var resultClientsList = [];\n\n      var _iterator = _createForOfIteratorHelper(this.bodyData),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var client = _step.value;\n          var mutationClient = this.returnClient(client, bank_name, metaFieldsArray);\n          resultClientsList.push(mutationClient);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return resultClientsList;\n    }\n  }]);\n\n  return MutationBody;\n}(MutationResponseData);\n\nexport { MutationResponseData, MutationBody };","map":{"version":3,"sources":["C:/current_front/src/assets/mutationResponseData.js"],"names":["checkAlfabank","returnColFields","MutationResponseData","responseData","data","localStorage","getItem","client","bank_name","metaFieldsArray","mutationClient","Object","entries","key","value","includes","replace","MutationBody","bodyData","body","getBank","resultClientsList","returnClient","push"],"mappings":";;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,eAAxB,QAA+C,+BAA/C;;IAGMC,oB;AACF,gCAAaC,YAAb,EAA2B;AAAA;;AACvB,SAAKC,IAAL,GAAYD,YAAZ;AACH;;;;WAED,mBAAU;AACN,aAAOE,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAP;AACH;;;WAED,sBAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,eAAjC,EAAkD;AAC9C,UAAIC,cAAc,GAAG,EAArB;;AAEA,yCAA2BC,MAAM,CAACC,OAAP,CAAeL,MAAf,CAA3B,qCAAmD;AAA9C;AAAA,YAAOM,GAAP;AAAA,YAAYC,KAAZ;;AACD,YAAIL,eAAe,CAACM,QAAhB,CAAyBF,GAAzB,CAAJ,EAAmC;AAC/BH,UAAAA,cAAc,CAACG,GAAG,CAACG,OAAJ,WAAeR,SAAf,QAA6B,EAA7B,CAAD,CAAd,GAAmDM,KAAnD;AACH;AACJ;;AACD,aAAOJ,cAAP;AACH;;;;;;IAICO,Y;;;;;AACF,wBAAad,YAAb,EAA2B;AAAA;;AAAA;;AACvB,8BAAMA,YAAN;AACA,UAAKe,QAAL,GAAgB,MAAKd,IAAL,CAAUA,IAAV,CAAee,IAAf,CAAoBA,IAApC;AAFuB;AAG1B;;;;WAED,8BAAsB;AAClB,UAAIX,SAAS,GAAGR,aAAa,CAAC,KAAKoB,OAAL,EAAD,CAA7B;AACA,UAAIX,eAAe,GAAGR,eAAe,CAACO,SAAD,CAArC;AACA,UAAIa,iBAAiB,GAAG,EAAxB;;AAHkB,iDAKC,KAAKH,QALN;AAAA;;AAAA;AAKlB,4DAAkC;AAAA,cAAzBX,MAAyB;AAC9B,cAAIG,cAAc,GAAG,KAAKY,YAAL,CAAkBf,MAAlB,EAA0BC,SAA1B,EAAqCC,eAArC,CAArB;AACAY,UAAAA,iBAAiB,CAACE,IAAlB,CAAuBb,cAAvB;AACH;AARiB;AAAA;AAAA;AAAA;AAAA;;AASlB,aAAOW,iBAAP;AACH;;;;EAhBsBnB,oB;;AAsB3B,SAASA,oBAAT,EAA+Be,YAA/B","sourcesContent":["import { checkAlfabank, returnColFields } from '@/assets/configs/colConfig.js'\r\n\r\n\r\nclass MutationResponseData {\r\n    constructor (responseData) {\r\n        this.data = responseData\r\n    }\r\n\r\n    getBank() {\r\n        return localStorage.getItem('bank')\r\n    }\r\n\r\n    returnClient (client, bank_name, metaFieldsArray) {\r\n        let mutationClient = {}\r\n\r\n        for (const [key, value] of Object.entries(client)) {\r\n            if (metaFieldsArray.includes(key)) {\r\n                mutationClient[key.replace(`${bank_name}_`, '')] = value\r\n            }\r\n        }\r\n        return mutationClient\r\n    }\r\n}\r\n\r\n\r\nclass MutationBody extends MutationResponseData {\r\n    constructor (responseData) {\r\n        super(responseData);\r\n        this.bodyData = this.data.data.body.body\r\n    }\r\n\r\n    returnMutationDict () {\r\n        let bank_name = checkAlfabank(this.getBank())\r\n        let metaFieldsArray = returnColFields(bank_name)\r\n        let resultClientsList = []\r\n\r\n        for (let client of this.bodyData) {\r\n            let mutationClient = this.returnClient(client, bank_name, metaFieldsArray)\r\n            resultClientsList.push(mutationClient)\r\n        }\r\n        return resultClientsList\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport { MutationResponseData, MutationBody };"]},"metadata":{},"sourceType":"module"}