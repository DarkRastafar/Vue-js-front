{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = {\n  class: \"table table-sm table-striped\"\n};\nvar _hoisted_2 = {\n  class: \"table-dark\"\n};\nvar _hoisted_3 = {\n  key: 0\n};\nvar _hoisted_4 = [\"name\", \"id\"];\nvar _hoisted_5 = [\"id\"];\nvar _hoisted_6 = [\"id\", \"value\", \"name\"];\nvar _hoisted_7 = {\n  class: \"v-table__paginator\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_bankes = _resolveComponent(\"bankes\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_bankes), _createElementVNode(\"table\", _hoisted_1, [_createElementVNode(\"thead\", _hoisted_2, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.allHeaders, function (header, head) {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: head,\n      class: _normalizeClass([\"col\", header.key])\n    }, [header.value !== 'username' ? (_openBlock(), _createElementBlock(\"td\", _hoisted_3, _toDisplayString(header.value), 1\n    /* TEXT */\n    )) : _createCommentVNode(\"v-if\", true)], 2\n    /* CLASS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.allClients, function (Client) {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      name: Client.id,\n      key: Client.id,\n      id: Client.id,\n      class: \"container-fluid\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Client, function (field, fieldName) {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: fieldName,\n        class: _normalizeClass([\"col\", fieldName]),\n        id: fieldName\n      }, [_createElementVNode(\"div\", null, [fieldName !== 'username_id' ? (_openBlock(), _createElementBlock(\"textarea\", {\n        key: 0,\n        id: \"\".concat(Client.id, \" \").concat(fieldName),\n        value: field,\n        name: fieldName,\n        onInput: _cache[0] || (_cache[0] = function () {\n          return $options.UpdateScrollHeight && $options.UpdateScrollHeight.apply($options, arguments);\n        }),\n        onChange: _cache[1] || (_cache[1] = function () {\n          return _ctx.CreateInput && _ctx.CreateInput.apply(_ctx, arguments);\n        })\n      }, null, 40\n      /* PROPS, HYDRATE_EVENTS */\n      , _hoisted_6)) : _createCommentVNode(\"v-if\", true)])], 10\n      /* CLASS, PROPS */\n      , _hoisted_5);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))], 8\n    /* PROPS */\n    , _hoisted_4);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pages, function (page) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"page\",\n      key: page\n    }, _toDisplayString(page), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createCommentVNode(\" <div v-for=\\\"client_new in paginatedClients\\\" :key=\\\"client_new\\\">{{client_new}}</div> \")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;AAESA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;;;;;;;AAoBVA,OAAK,EAAC;;;;;6DAtBXC,aAASC,iBAAT,GACAC,oBAoBQ,OApBR,cAoBQ,CAnBNA,oBAMQ,OANR,cAMQ,CALNA,oBAIK,IAJL,EAIK,IAJL,EAIK,oBAHHC,oBAEKC,SAFL,EAEK,IAFL,EAEKC,YAFwBC,eAExB,EAFkC,UAA3BC,MAA2B,EAAnBC,IAAmB,EAAf;yBAAxBL,oBAEK,IAFL,EAEK;AAFqCM,SAAG,EAAED,IAE1C;AAFgDT,WAAK,mBAAC,KAAD,EAAeQ,MAAM,CAACE,GAAtB;AAErD,KAFL,GACYF,MAAM,CAACG,KAAP,KAAY,4BAAtBP,oBAA4D,IAA5D,EAA4DQ,UAA5D,EAA4DC,iBAAnBL,MAAM,CAACG,KAAY,CAA5D,EAAqD;AAAA;AAArD,2CADF;;AAAA;GAEK,CAFL;;AAAA,GAGG,EAJL,CAKM,CANR,CAmBM,EAZNR,oBAWQ,OAXR,EAWQ,IAXR,EAWQ,oBAVNC,oBASKC,SATL,EASK,IATL,EASKC,YATkCC,eASlC,EAT4C,UAApBO,MAAoB,EAAd;yBAAnCV,oBASK,IATL,EASK;AATAW,UAAI,EAAED,MAAM,CAACE,EASb;AATqDN,SAAG,EAAEI,MAAM,CAACE,EASjE;AATsEA,QAAE,EAAEF,MAAM,CAACE,EASjF;AATqFhB,WAAK,EAAC;AAS3F,KATL,sBACEI,oBAOKC,SAPL,EAOK,IAPL,EAOKC,YAP4BQ,MAO5B,EAPkC,UAA3BG,KAA2B,EAApBC,SAAoB,EAAX;2BAA5Bd,oBAOK,IAPL,EAOK;AAP2CM,WAAG,EAAEQ,SAOhD;AAP2DlB,aAAK,mBAAC,KAAD,EAAekB,SAAf,EAOhE;AAP2FF,UAAE,EAAEE;AAO/F,OAPL,GACEf,oBAKM,KALN,EAKM,IALN,EAKM,CAHIe,SAAS,oCADjBd,oBAGE,UAHF,EAGE;cAAA;AAFoCY,UAAE,YAAKF,MAAM,CAACE,EAAZ,cAAkBE,SAAlB,CAEtC;AAF4EP,aAAK,EAAEM,KAEnF;AAF2FF,YAAI,EAAEG,SAEjG;AADCC,eAAK;AAAA,iBAAEC,qFAAF;AAAA,UACN;AAD6BC,gBAAM;AAAA,iBAAEd,2DAAF;AAAA;AACnC,OAHF;;AAAA,wDAII,CALN,EADF;;AAAA;KAOK,CAPL;;AAAA,OADF;;AAAA;GASK,CATL;;AAAA,GAUM,EAXR,CAYM,CApBR,GAqBAJ,oBAIM,KAJN,cAIM,oBAHAC,oBAEgCC,SAFhC,EAEgC,IAFhC,EAEgCC,YADbc,cACa,EADR,UAAbE,IAAa,EAAT;yBADflB,oBAEgC,KAFhC,EAEgC;AAF3BJ,WAAK,EAAC,MAEqB;AAA3BU,SAAG,EAAEY;AAAsB,KAFhC,mBAEmBA,KAFnB,EAEuB;AAAA;AAFvB;GAEgC,CAFhC;;AAAA,GAGA,EAJN,GAMAC","names":["class","_createVNode","_component_bankes","_createElementVNode","_createElementBlock","_Fragment","_renderList","_ctx","header","head","key","value","_hoisted_3","_toDisplayString","Client","name","id","field","fieldName","onInput","$options","onChange","page","_createCommentVNode"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\BodyTable.vue"],"sourcesContent":["<template>\r\n  <bankes/>\r\n  <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th v-for=\"(header, head) in allHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n          <td v-if=\"header.value !== 'username'\">{{header.value}}</td>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr :name=\"Client.id\" v-for=\"Client in allClients\" v-bind:key=\"Client.id\" :id=\"Client.id\" class=\"container-fluid\" >\r\n        <td v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" class=\"col\" :class=\"fieldName\" :id=\"fieldName\">\r\n          <div>\r\n            <textarea \r\n              v-if=\"fieldName !== 'username_id'\" :id=\"`${Client.id} ${fieldName}`\" v-bind:value=\"field\" :name=\"fieldName\" \r\n              @input=\"UpdateScrollHeight\" @change=\"CreateInput\"\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <div class=\"v-table__paginator\">\r\n        <div class=\"page\" \r\n            v-for=\"page in pages\" \r\n            :key=\"page\">{{ page }}</div>\r\n  </div>\r\n\r\n  <!-- <div v-for=\"client_new in paginatedClients\" :key=\"client_new\">{{client_new}}</div> -->\r\n</template>\r\n\r\n\r\n<script>\r\n  import bankes from '@/components/bankes.vue'\r\n  import pagination from '@/components/pagination.vue'\r\n\r\n  import { mapGetters, mapActions } from 'vuex'\r\n\r\n\r\n  export default {\r\n      name: 'bodyTable',\r\n      data() {\r\n        return {\r\n          clientsPerPage: 1,\r\n          pageNumber: 1\r\n        }\r\n      },\r\n      components: {\r\n        bankes,\r\n        pagination,\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"allClients\", \"allHeaders\", \"allDropDownComments\"]),\r\n        pages () {\r\n              // var allClients = this.$store.mapGetters.allClients\r\n          return Math.ceil(this.allClients.length / this.clientsPerPage)\r\n        },\r\n        paginatedClients () {\r\n          // var allClients = this.$store.mapGetters.allClients\r\n          let from = (this.pageNumber -1) * this.clientsPerPage;\r\n          let to = from + this.clientsPerPage;\r\n          return this.$store.mapGetters.allClients.slice(from, to);\r\n        }\r\n      },\r\n      methods: mapActions(['websocketConnect']),\r\n      methods: {\r\n        UpdateScrollHeight (event) {\r\n          const currentTextareaField = document.getElementById(event.target.id);\r\n          currentTextareaField.style.cssText = `height: ${currentTextareaField, currentTextareaField.scrollHeight}px; overflow-y: hidden`;\r\n        },\r\n      },\r\n      // computed: {\r\n      //   pages () {\r\n      //         // var allClients = this.$store.mapGetters.allClients\r\n      //         return Math.ceil(this.$store.mapGetters.allClients.length / this.clientsPerPage)\r\n      //       },\r\n      //   paginatedClients () {\r\n      //       // var allClients = this.$store.mapGetters.allClients\r\n      //       let from = (this.pageNumber -1) * this.clientsPerPage;\r\n      //       let to = from + this.clientsPerPage;\r\n      //       return this.$store.mapGetters.allClients.slice(from, to);\r\n      //   }\r\n      // },\r\n      async mounted() {\r\n        this.$store.dispatch('websocketConnect');\r\n      }\r\n  }\r\n</script>"]},"metadata":{},"sourceType":"module"}