{"ast":null,"code":"import _defineProperty from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _name$data$components;\n\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport bankes from '@/components/bankes.vue'; // import pagination from '@/components/pagination.vue'\n\nimport { mapGetters, mapActions } from 'vuex';\nimport Paginate from \"vuejs-paginate-next\";\nexport default (_name$data$components = {\n  name: 'bodyTable',\n  data: function data() {\n    return {\n      clientsPerPage: 1,\n      pageNumber: 1,\n      displayPages: 3\n    };\n  },\n  components: {\n    bankes: bankes,\n    Paginate: Paginate\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"firstTableHeaders\", \"secondTableHeaders\", \"thirdTableHeaders\", \"tableBody\"])), {}, {\n    howClients: function howClients() {\n      // this.secondTableBody.length\n      return this.tableBody.length;\n    },\n    pages: function pages() {\n      return Math.ceil(this.tableBody.length / this.clientsPerPage);\n    },\n    paginatedClients: function paginatedClients() {\n      var from = (this.pageNumber - 1) * this.clientsPerPage;\n      var to = from + this.clientsPerPage;\n      return this.tableBody.slice(from, to);\n    }\n  }),\n  methods: mapActions(['websocketConnect'])\n}, _defineProperty(_name$data$components, \"methods\", {\n  UpdateScrollHeight: function UpdateScrollHeight(event) {\n    var currentTextareaField = document.getElementById(event.target.id);\n    currentTextareaField.style.cssText = \"height: \".concat((currentTextareaField, currentTextareaField.scrollHeight), \"px; overflow-y: hidden\");\n  },\n  clickPage: function clickPage(page) {\n    if (page !== '...') {\n      this.pageNumber = page;\n    } else {\n      this.displayingPages = Math.ceil(this.tableBody.length / this.clientsPerPage);\n    }\n  }\n}), _defineProperty(_name$data$components, \"mounted\", function mounted() {\n  var _this = this;\n\n  return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _this.$store.dispatch('websocketConnect');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n}), _name$data$components);","map":{"version":3,"mappings":";;;;;;;;AA2HE,OAAOA,MAAP,MAAmB,yBAAnB,C,CACA;;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA;AACIC,MAAI,EAAE,WADV;AAEIC,MAFJ,kBAEW;AACL,WAAO;AACLC,oBAAc,EAAE,CADX;AAELC,gBAAU,EAAE,CAFP;AAGLC,kBAAY,EAAE;AAHT,KAAP;AAKD,GARL;AASIC,YAAU,EAAE;AACVT,UAAM,EAANA,MADU;AAEVG,YAAQ,EAARA;AAFU,GAThB;AAaIO,UAAQ,kCACHT,UAAU,CAAC,CAAC,mBAAD,EAAsB,oBAAtB,EAA4C,mBAA5C,EAAiE,WAAjE,CAAD,CADP;AAGNU,cAHM,wBAGQ;AACZ;AACA,aAAO,KAAKC,SAAL,CAAeC,MAAtB;AACD,KANK;AAQNC,SARM,mBAQG;AACP,aAAOC,IAAI,CAACC,IAAL,CAAU,KAAKJ,SAAL,CAAeC,MAAf,GAAwB,KAAKP,cAAvC,CAAP;AACD,KAVK;AAWNW,oBAXM,8BAWc;AAClB,UAAIC,IAAG,GAAI,CAAC,KAAKX,UAAL,GAAiB,CAAlB,IAAuB,KAAKD,cAAvC;AACA,UAAIa,EAAC,GAAID,IAAG,GAAI,KAAKZ,cAArB;AACA,aAAO,KAAKM,SAAL,CAAeQ,KAAf,CAAqBF,IAArB,EAA2BC,EAA3B,CAAP;AACF;AAfM,IAbZ;AA8BIE,SAAO,EAAEnB,UAAU,CAAC,CAAC,kBAAD,CAAD;AA9BvB,qDA+Ba;AACPoB,oBADO,8BACaC,KADb,EACoB;AACzB,QAAMC,oBAAmB,GAAIC,QAAQ,CAACC,cAAT,CAAwBH,KAAK,CAACI,MAAN,CAAaC,EAArC,CAA7B;AACAJ,wBAAoB,CAACK,KAArB,CAA2BC,OAA3B,sBAAgDN,oBAAoB,EAAEA,oBAAoB,CAACO,YAA3F;AACD,GAJM;AAKPC,WALO,qBAKIC,IALJ,EAKU;AACf,QAAIA,IAAG,KAAM,KAAb,EAAmB;AACjB,WAAK1B,UAAL,GAAkB0B,IAAlB;AACF,KAFA,MAEO;AACL,WAAKC,eAAL,GAAuBnB,IAAI,CAACC,IAAL,CAAU,KAAKJ,SAAL,CAAeC,MAAf,GAAwB,KAAKP,cAAvC,CAAvB;AACF;AAED;AAZM,CA/Bb,wEA6CoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAI,CAAC6B,MAAL,CAAYC,QAAZ,CAAqB,kBAArB;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB,CA/CJ","names":["bankes","mapGetters","mapActions","Paginate","name","data","clientsPerPage","pageNumber","displayPages","components","computed","howClients","tableBody","length","pages","Math","ceil","paginatedClients","from","to","slice","methods","UpdateScrollHeight","event","currentTextareaField","document","getElementById","target","id","style","cssText","scrollHeight","clickPage","page","displayingPages","$store","dispatch"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\BodyTable.vue"],"sourcesContent":["<template>\r\n  <bankes/>\r\n\r\n  <div class=\"container fluid\" :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\">\r\n    <p>{{howClients}}</p>\r\n    <table class=\"table table-sm table-striped\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n\r\n          <th rowspan=\"2\" :class=\"firstTableHeaders[0].key\"><p>{{ firstTableHeaders[0].value }}</p></th>\r\n          <th class=\"cell\" rowspan=\"2\" :name=\"`id ${Client.id}`\">\r\n            {{ Client.id }}\r\n          </th>\r\n          <!-- ------------------------------------------------------------------ -->\r\n          <th><p>{{ secondTableHeaders[0].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`inn ${Client.id}`\">\r\n            <textarea :value=\"Client.inn\" name=\"inn\"/>\r\n          </th>\r\n          <!-- ------------------------------------------------------------------ -->\r\n          <th><p>{{ thirdTableHeaders[0].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`comment ${Client.id}`\">\r\n            <textarea :value=\"Client.comment\" name=\"comment\"/>\r\n          </th>\r\n\r\n        </tr>\r\n        <tr>\r\n          <th><p>{{ secondTableHeaders[1].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`name_company ${Client.id}`\">\r\n            <textarea :value=\"Client.name_company\" name=\"name_company\"/>\r\n          </th>\r\n          <!-- ------------------------------------------------------------------ -->\r\n          <th><p>{{ thirdTableHeaders[1].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`additional_comment ${Client.id}`\">\r\n            <textarea :value=\"Client.additional_comment\" name=\"additional_comment\"/>\r\n          </th>\r\n\r\n        </tr>\r\n        <tr>\r\n\r\n          <th :class=\"firstTableHeaders[1].key\"><p>{{ firstTableHeaders[1].value }}</p></th>\r\n           <th class=\"cell\" :name=\"`status_inn ${Client.id}`\">\r\n            <textarea :value=\"Client.status_inn\" name=\"status_inn\"/>\r\n          </th>\r\n          <!-- ------------------------------------------------------------------ -->\r\n          <th><p>{{ secondTableHeaders[2].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`surname ${Client.id}`\">\r\n            <textarea :value=\"Client.surname\" name=\"surname\"/>\r\n          </th>\r\n          <!-- ------------------------------------------------------------------ -->\r\n          <th><p>{{ thirdTableHeaders[2].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`send_rko ${Client.id}`\">\r\n            <textarea :value=\"Client.send_rko\" name=\"send_rko\"/>\r\n          </th>\r\n\r\n        </tr>\r\n\r\n        <tr>\r\n\r\n          <th :class=\"firstTableHeaders[3].key\"><p>{{ firstTableHeaders[3].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`bank_city ${Client.id}`\">\r\n            <textarea :value=\"Client.bank_city\" name=\"bank_city\"/>\r\n          </th>\r\n          <th><p>{{ secondTableHeaders[3].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`first_name ${Client.id}`\">\r\n            <textarea :value=\"Client.first_name\" name=\"first_name\"/>\r\n          </th>\r\n          <!-- ------------------------------------------------------------------ -->\r\n          <th><p>{{ thirdTableHeaders[3].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`client_type ${Client.id}`\">\r\n            <textarea :value=\"Client.client_type\" name=\"client_type\"/>\r\n          </th>\r\n\r\n        </tr>\r\n\r\n        <tr>\r\n          <th :class=\"firstTableHeaders[2].key\"><p>{{ firstTableHeaders[2].value }}</p></th>\r\n           <th class=\"cell\" :name=\"`bank_response ${Client.id}`\">\r\n            <textarea :value=\"Client.bank_response\" name=\"bank_response\"/>\r\n          </th>\r\n          <th><p>{{ secondTableHeaders[4].value }}</p></th>\r\n          <th class=\"cell\" :name=\"`patronomic ${Client.id}`\">\r\n            <textarea :value=\"Client.patronomic\" name=\"patronomic\"/>\r\n          </th>\r\n          <!-- ------------------------------------------------------------------ -->\r\n          <th colspan=\"2\" rowspan=\"2\" class=\"cell\">\r\n            <button class=\"btn btn-primary send-data\" type=\"submit\">Отправить</button>\r\n          </th>\r\n          \r\n        </tr>\r\n\r\n        <tr>\r\n          \r\n          <th><p>{{ secondTableHeaders[5].value }}</p></th>\r\n          <th colspan=\"3\" class=\"cell\" :name=\"`adress ${Client.id}`\">\r\n            <textarea :value=\"Client.adress\" name=\"adress\"/>\r\n          </th>\r\n          <!-- ------------------------------------------------------------------ -->\r\n        </tr>\r\n\r\n      </thead>\r\n    </table>\r\n  </div>\r\n  <div class=\"v-table__paginator\">\r\n    <div>\r\n    <paginate\r\n      :page-count=\"pages\"\r\n      :click-handler=\"clickPage\"\r\n      :prev-text=\"'Prev'\"\r\n      :next-text=\"'Next'\"\r\n      :container-class=\"'vue-paginate'\">\r\n    </paginate>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"v-table__paginator\">\r\n    <div class=\"page\" v-for=\"page in pages\" :key=\"page\" :class=\"{'page__selected': page === pageNumber}\" @click=\"clickPage(page)\">\r\n          {{ page }}\r\n    </div>\r\n  </div> -->\r\n</template>\r\n\r\n\r\n<script>\r\n  import bankes from '@/components/bankes.vue'\r\n  // import pagination from '@/components/pagination.vue'\r\n  import { mapGetters, mapActions } from 'vuex'\r\n  import Paginate from \"vuejs-paginate-next\";\r\n\r\n  export default {\r\n      name: 'bodyTable',\r\n      data() {\r\n        return {\r\n          clientsPerPage: 1,\r\n          pageNumber: 1,\r\n          displayPages: 3,\r\n        }\r\n      },\r\n      components: {\r\n        bankes,\r\n        Paginate,\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"firstTableHeaders\", \"secondTableHeaders\", \"thirdTableHeaders\", \"tableBody\"]),\r\n\r\n        howClients () {\r\n          // this.secondTableBody.length\r\n          return this.tableBody.length\r\n        },\r\n\r\n        pages () {\r\n          return Math.ceil(this.tableBody.length / this.clientsPerPage)\r\n        },\r\n        paginatedClients () {\r\n          let from = (this.pageNumber -1) * this.clientsPerPage;\r\n          let to = from + this.clientsPerPage;\r\n          return this.tableBody.slice(from, to);\r\n        }\r\n      },\r\n      methods: mapActions(['websocketConnect']),\r\n      methods: {\r\n        UpdateScrollHeight (event) {\r\n          const currentTextareaField = document.getElementById(event.target.id);\r\n          currentTextareaField.style.cssText = `height: ${currentTextareaField, currentTextareaField.scrollHeight}px; overflow-y: hidden`;\r\n        },\r\n        clickPage (page) {\r\n          if (page !== '...'){\r\n            this.pageNumber = page;\r\n          } else {\r\n            this.displayingPages = Math.ceil(this.tableBody.length / this.clientsPerPage)\r\n          }\r\n          \r\n        },\r\n      },\r\n      async mounted() {\r\n        this.$store.dispatch('websocketConnect');\r\n      }\r\n  }\r\n</script>\r\n<style lang=\"css\">\r\n  /* Adopt bootstrap pagination stylesheet. */\r\n  @import \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\";\r\n\r\n  /* Write your own CSS for pagination */\r\n  .pagination {\r\n  }\r\n  .page-item {\r\n  }\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th v-for=\"(header, head) in allHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n          <td v-if=\"header.value !== 'username'\">{{header.value}}</td>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\" class=\"container-fluid\" >\r\n        <td v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" class=\"col\" :class=\"fieldName\" :id=\"fieldName\">\r\n          <div>\r\n            <textarea \r\n              v-if=\"fieldName !== 'username_id'\" :id=\"`${Client.id} ${fieldName}`\" v-bind:value=\"field\" :name=\"fieldName\" \r\n              @input=\"UpdateScrollHeight\" @change=\"CreateInput\"\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table> -->\r\n  <!-- <div class=\"v-table__paginator\">\r\n    <div class=\"page\" \r\n        v-for=\"page in displayingPages\" :key=\"page\" :class=\"{'page__selected': page === pageNumber}\" @click=\"clickPage(page)\">\r\n          {{ page }}\r\n        </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"container fluid\"> -->\r\n    <!-- <div class=\"row\"> -->\r\n      <!-- <table class=\"table table-sm table-striped\">\r\n        <tbody>\r\n          <td v-for=\"Client in firstTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in firstTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in secondTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in secondTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\"/>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in thirdTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in thirdTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n        </tbody>\r\n      </table> -->\r\n    <!-- </div> -->\r\n  <!-- </div> -->"]},"metadata":{},"sourceType":"module"}