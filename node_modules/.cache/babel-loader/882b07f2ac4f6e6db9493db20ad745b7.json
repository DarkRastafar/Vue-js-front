{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  class: \"container fluid customData\"\n};\nvar _hoisted_2 = {\n  class: \"row\"\n};\nvar _hoisted_3 = {\n  class: \"col-12 col-md-6\"\n};\nvar _hoisted_4 = {\n  class: \"col-12 col-md-12 col-sm-12 col-lg-10 col-xl-8\"\n};\nvar _hoisted_5 = {\n  class: \"data_non_called_clients\"\n};\nvar _hoisted_6 = {\n  class: \"list-group\"\n};\nvar _hoisted_7 = {\n  class: \"list-group-item d-flex justify-content-between align-items-center\"\n};\n\nvar _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Альфабанк: \");\n\nvar _hoisted_9 = {\n  class: \"badge badge-primary badge-pill statisticsDataSpan\"\n};\nvar _hoisted_10 = {\n  class: \"list-group-item d-flex justify-content-between align-items-center\"\n};\n\nvar _hoisted_11 = /*#__PURE__*/_createTextVNode(\"ВтБ: \");\n\nvar _hoisted_12 = {\n  class: \"badge badge-primary badge-pill statisticsDataSpan\"\n};\nvar _hoisted_13 = {\n  class: \"list-group-item d-flex justify-content-between align-items-center\"\n};\n\nvar _hoisted_14 = /*#__PURE__*/_createTextVNode(\"Открытие: \");\n\nvar _hoisted_15 = {\n  class: \"badge badge-primary badge-pill statisticsDataSpan\"\n};\nvar _hoisted_16 = {\n  class: \"list-group-item d-flex justify-content-between align-items-center\"\n};\n\nvar _hoisted_17 = /*#__PURE__*/_createTextVNode(\"Точка: \");\n\nvar _hoisted_18 = {\n  class: \"badge badge-primary badge-pill statisticsDataSpan\"\n};\nvar _hoisted_19 = {\n  class: \"container fluid\"\n};\nvar _hoisted_20 = {\n  class: \"row\"\n};\nvar _hoisted_21 = {\n  class: \"col-md-8\"\n};\nvar _hoisted_22 = [\"name\", \"id\"];\nvar _hoisted_23 = {\n  class: \"table-dark\"\n};\nvar _hoisted_24 = [\"name\"];\nvar _hoisted_25 = [\"name\"];\nvar _hoisted_26 = [\"value\"];\nvar _hoisted_27 = [\"name\"];\nvar _hoisted_28 = [\"value\"];\nvar _hoisted_29 = [\"name\"];\nvar _hoisted_30 = [\"value\"];\nvar _hoisted_31 = [\"name\"];\nvar _hoisted_32 = {\n  class: \"form-select\"\n};\n\nvar _hoisted_33 = /*#__PURE__*/_createElementVNode(\"option\", null, \"Доп. коммент\", -1\n/* HOISTED */\n);\n\nvar _hoisted_34 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createCommentVNode(\" <th :class=\\\"firstTableHeaders[1].key\\\"><p>{{ firstTableHeaders[1].value }}</p></th>\\r\\n              <th class=\\\"cell\\\" :name=\\\"`status_inn ${Client.id}`\\\">\\r\\n                <textarea :value=\\\"Client.status_inn\\\" name=\\\"status_inn\\\"/>\\r\\n              </th> \"), /*#__PURE__*/_createCommentVNode(\" ------------------------------------------------------------------ \"), /*#__PURE__*/_createCommentVNode(\" <th><p>{{ secondTableHeaders[2].value }}</p></th>\\r\\n              <th class=\\\"cell\\\" :name=\\\"`surname ${Client.id}`\\\">\\r\\n                <textarea :value=\\\"Client.surname\\\" name=\\\"surname\\\"/>\\r\\n              </th> \"), /*#__PURE__*/_createCommentVNode(\" ------------------------------------------------------------------ \"), /*#__PURE__*/_createCommentVNode(\" <th><p>{{ thirdTableHeaders[2].value }}</p></th>\\r\\n              <th class=\\\"cell\\\" :name=\\\"`send_rko ${Client.id}`\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"btn-check send_rko_checkbox\\\" id=\\\"btn-check-outlined send_rko_checkbox\\\" autocomplete=\\\"off\\\">\\r\\n                <label class=\\\"btn btn-outline-primary send_rko_checkbox\\\" for=\\\"btn-check-outlined send_rko_checkbox\\\">Отправить</label><br>\\r\\n              </th> \")], -1\n/* HOISTED */\n);\n\nvar _hoisted_35 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createCommentVNode(\" <th :class=\\\"firstTableHeaders[3].key\\\"><p>{{ firstTableHeaders[3].value }}</p></th>\\r\\n              <th class=\\\"cell\\\" :name=\\\"`bank_city ${Client.id}`\\\">\\r\\n                <textarea :value=\\\"Client.bank_city\\\" name=\\\"bank_city\\\"/>\\r\\n              </th>\\r\\n              <th><p>{{ secondTableHeaders[3].value }}</p></th>\\r\\n              <th class=\\\"cell\\\" :name=\\\"`first_name ${Client.id}`\\\">\\r\\n                <textarea :value=\\\"Client.first_name\\\" name=\\\"first_name\\\"/>\\r\\n              </th> \"), /*#__PURE__*/_createCommentVNode(\" ------------------------------------------------------------------ \"), /*#__PURE__*/_createCommentVNode(\" <th><p>{{ thirdTableHeaders[3].value }}</p></th>\\r\\n              <th class=\\\"cell\\\" :name=\\\"`client_type ${Client.id}`\\\">\\r\\n                <select class=\\\"form-select\\\">\\r\\n                  <option>Тип клиента</option>\\r\\n                  <option v-for=\\\"clientType in clientsTypeForOperators\\\" v-bind:key=\\\"clientType.key\\\" :id=\\\"clientType.key\\\">{{clientType.value}}</option>\\r\\n                </select>\\r\\n              </th> \")], -1\n/* HOISTED */\n);\n\nvar _hoisted_36 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createCommentVNode(\" <th :class=\\\"firstTableHeaders[2].key\\\"><p>{{ firstTableHeaders[2].value }}</p></th>\\r\\n              <th class=\\\"cell\\\" :name=\\\"`bank_response ${Client.id}`\\\">\\r\\n                <textarea :value=\\\"Client.bank_response\\\" name=\\\"bank_response\\\"/>\\r\\n              </th>\\r\\n              <th><p>{{ secondTableHeaders[4].value }}</p></th>\\r\\n              <th class=\\\"cell\\\" :name=\\\"`patronomic ${Client.id}`\\\">\\r\\n                <textarea :value=\\\"Client.patronomic\\\" name=\\\"patronomic\\\"/>\\r\\n              </th> \"), /*#__PURE__*/_createCommentVNode(\" ------------------------------------------------------------------ \"), /*#__PURE__*/_createCommentVNode(\" <th colspan=\\\"2\\\" rowspan=\\\"2\\\" class=\\\"cell\\\">\\r\\n                <button class=\\\"btn btn-primary send-data\\\" type=\\\"submit\\\">Отправить</button>\\r\\n              </th> \")], -1\n/* HOISTED */\n);\n\nvar _hoisted_37 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createCommentVNode(\" <th><p>{{ secondTableHeaders[5].value }}</p></th>\\r\\n              <th colspan=\\\"3\\\" class=\\\"cell\\\" :name=\\\"`adress ${Client.id}`\\\">\\r\\n                <textarea :value=\\\"Client.adress\\\" name=\\\"adress\\\"/>\\r\\n              </th> \"), /*#__PURE__*/_createCommentVNode(\" ------------------------------------------------------------------ \")], -1\n/* HOISTED */\n);\n\nvar _hoisted_38 = {\n  class: \"v-table__paginator\"\n};\nvar _hoisted_39 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_bankes = _resolveComponent(\"bankes\");\n\n  var _component_rangeFilter = _resolveComponent(\"rangeFilter\");\n\n  var _component_paginate = _resolveComponent(\"paginate\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_bankes), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_rangeFilter, {\n    onRangeFilterClients: $options.rangeFilterClients\n  }, null, 8\n  /* PROPS */\n  , [\"onRangeFilterClients\"])]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"col-md-6\", {\n      'hidden__content': $options.modelType !== 'novoregi'\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"ul\", _hoisted_6, [_createElementVNode(\"li\", _hoisted_7, [_hoisted_8, _createElementVNode(\"span\", _hoisted_9, _toDisplayString(_ctx.statisticsData.alfa_data_json), 1\n  /* TEXT */\n  )]), _createElementVNode(\"li\", _hoisted_10, [_hoisted_11, _createElementVNode(\"span\", _hoisted_12, _toDisplayString(_ctx.statisticsData.vtb_data_json), 1\n  /* TEXT */\n  )]), _createElementVNode(\"li\", _hoisted_13, [_hoisted_14, _createElementVNode(\"span\", _hoisted_15, _toDisplayString(_ctx.statisticsData.otkritie_data_json), 1\n  /* TEXT */\n  )]), _createElementVNode(\"li\", _hoisted_16, [_hoisted_17, _createElementVNode(\"span\", _hoisted_18, _toDisplayString(_ctx.statisticsData.tochka_data_json), 1\n  /* TEXT */\n  )])])])])], 2\n  /* CLASS */\n  )])]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tableBody, function (Client) {\n    return _openBlock(), _createElementBlock(\"table\", {\n      class: \"table table-sm table-striped\",\n      name: Client.id,\n      key: Client.id,\n      id: Client.id\n    }, [_createElementVNode(\"thead\", _hoisted_23, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n      rowspan: \"2\",\n      class: _normalizeClass(_ctx.firstTableHeaders[0].key)\n    }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.firstTableHeaders[0].value), 1\n    /* TEXT */\n    )], 2\n    /* CLASS */\n    ), _createElementVNode(\"th\", {\n      class: \"cell\",\n      rowspan: \"2\",\n      name: \"id \".concat(Client.id)\n    }, _toDisplayString(Client.id), 9\n    /* TEXT, PROPS */\n    , _hoisted_24), _createCommentVNode(\" ------------------------------------------------------------------ \"), _createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.secondTableHeaders[0].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", {\n      class: \"cell\",\n      name: \"inn \".concat(Client.id)\n    }, [_createElementVNode(\"textarea\", {\n      value: Client.inn,\n      name: \"inn\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_26)], 8\n    /* PROPS */\n    , _hoisted_25), _createCommentVNode(\" ------------------------------------------------------------------ \"), _createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.thirdTableHeaders[0].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", {\n      class: \"cell\",\n      name: \"comment \".concat(Client.id)\n    }, [_createElementVNode(\"textarea\", {\n      value: Client.comment,\n      name: \"comment\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_28)], 8\n    /* PROPS */\n    , _hoisted_27)]), _createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.secondTableHeaders[1].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", {\n      class: \"cell\",\n      name: \"name_company \".concat(Client.id)\n    }, [_createElementVNode(\"textarea\", {\n      value: Client.name_company,\n      name: \"name_company\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_30)], 8\n    /* PROPS */\n    , _hoisted_29), _createCommentVNode(\" ------------------------------------------------------------------ \"), _createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.thirdTableHeaders[1].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", {\n      class: \"cell\",\n      name: \"additional_comment \".concat(Client.id)\n    }, [_createElementVNode(\"select\", _hoisted_32, [_hoisted_33, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.additionalComments, function (comment) {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: comment.id\n      }, _toDisplayString(comment.list), 1\n      /* TEXT */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])], 8\n    /* PROPS */\n    , _hoisted_31)]), _hoisted_34, _hoisted_35, _hoisted_36, _hoisted_37])], 8\n    /* PROPS */\n    , _hoisted_22);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]), _createElementVNode(\"div\", _hoisted_38, [_createElementVNode(\"div\", _hoisted_39, [_createVNode(_component_paginate, {\n    \"page-count\": $options.pages,\n    \"page-range\": 5,\n    \"click-handler\": $options.clickPage,\n    \"prev-text\": 'Предыдущий',\n    \"next-text\": 'Следующий',\n    \"container-class\": 'v-table__paginator'\n  }, null, 8\n  /* PROPS */\n  , [\"page-count\", \"click-handler\"])])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createCommentVNode","_createVNode","_component_bankes","_component_rangeFilter","onRangeFilterClients","$options","_toDisplayString","_ctx","alfa_data_json","vtb_data_json","otkritie_data_json","tochka_data_json","_createElementBlock","_Fragment","_renderList","Client","name","id","key","rowspan","value","_hoisted_24","inn","comment","name_company","_hoisted_33","list","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_component_paginate"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\BodyTable.vue"],"sourcesContent":["<template>\r\n  <bankes/>\r\n  <div class=\"container fluid customData\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-6\">\r\n        <rangeFilter @rangeFilterClients=\"rangeFilterClients\"/>\r\n      </div>\r\n      <div class=\"col-md-6\" :class=\"{'hidden__content': modelType !== 'novoregi'}\">\r\n        <div class=\"col-12 col-md-12 col-sm-12 col-lg-10 col-xl-8\">\r\n          <div class=\"data_non_called_clients\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">Альфабанк:\r\n                <span class=\"badge badge-primary badge-pill statisticsDataSpan\">{{ statisticsData.alfa_data_json }}</span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">ВтБ:\r\n                <span class=\"badge badge-primary badge-pill statisticsDataSpan\">{{ statisticsData.vtb_data_json }}</span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">Открытие:\r\n                <span class=\"badge badge-primary badge-pill statisticsDataSpan\">{{ statisticsData.otkritie_data_json }}</span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">Точка:\r\n                <span class=\"badge badge-primary badge-pill statisticsDataSpan\">{{ statisticsData.tochka_data_json }}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  <div class=\"container fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8\">\r\n        <table class=\"table table-sm table-striped\" :name=\"Client.id\" v-for=\"Client in tableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\">\r\n          <thead class=\"table-dark\">\r\n            <tr>\r\n              \r\n              <th rowspan=\"2\" :class=\"firstTableHeaders[0].key\"><p>{{ firstTableHeaders[0].value }}</p></th>\r\n              <th class=\"cell\" rowspan=\"2\" :name=\"`id ${Client.id}`\">\r\n                {{ Client.id }}\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th><p>{{ secondTableHeaders[0].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`inn ${Client.id}`\">\r\n                <textarea :value=\"Client.inn\" name=\"inn\"/>\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th><p>{{ thirdTableHeaders[0].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`comment ${Client.id}`\">\r\n                <textarea :value=\"Client.comment\" name=\"comment\"/>\r\n              </th>\r\n\r\n            </tr>\r\n            <tr>\r\n              <th><p>{{ secondTableHeaders[1].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`name_company ${Client.id}`\">\r\n                <textarea :value=\"Client.name_company\" name=\"name_company\"/>\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th><p>{{ thirdTableHeaders[1].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`additional_comment ${Client.id}`\">\r\n                <select class=\"form-select\">\r\n                  <option>Доп. коммент</option>\r\n                  <option v-for=\"comment in additionalComments\" v-bind:key=\"comment.id\">{{comment.list}}</option>\r\n                </select>\r\n              </th>\r\n\r\n            </tr> \r\n            <tr>\r\n\r\n              <!-- <th :class=\"firstTableHeaders[1].key\"><p>{{ firstTableHeaders[1].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`status_inn ${Client.id}`\">\r\n                <textarea :value=\"Client.status_inn\" name=\"status_inn\"/>\r\n              </th> -->\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <!-- <th><p>{{ secondTableHeaders[2].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`surname ${Client.id}`\">\r\n                <textarea :value=\"Client.surname\" name=\"surname\"/>\r\n              </th> -->\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <!-- <th><p>{{ thirdTableHeaders[2].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`send_rko ${Client.id}`\">\r\n                <input type=\"checkbox\" class=\"btn-check send_rko_checkbox\" id=\"btn-check-outlined send_rko_checkbox\" autocomplete=\"off\">\r\n                <label class=\"btn btn-outline-primary send_rko_checkbox\" for=\"btn-check-outlined send_rko_checkbox\">Отправить</label><br>\r\n              </th> -->\r\n\r\n            </tr>\r\n\r\n            <tr>\r\n\r\n              <!-- <th :class=\"firstTableHeaders[3].key\"><p>{{ firstTableHeaders[3].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`bank_city ${Client.id}`\">\r\n                <textarea :value=\"Client.bank_city\" name=\"bank_city\"/>\r\n              </th>\r\n              <th><p>{{ secondTableHeaders[3].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`first_name ${Client.id}`\">\r\n                <textarea :value=\"Client.first_name\" name=\"first_name\"/>\r\n              </th> -->\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <!-- <th><p>{{ thirdTableHeaders[3].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`client_type ${Client.id}`\">\r\n                <select class=\"form-select\">\r\n                  <option>Тип клиента</option>\r\n                  <option v-for=\"clientType in clientsTypeForOperators\" v-bind:key=\"clientType.key\" :id=\"clientType.key\">{{clientType.value}}</option>\r\n                </select>\r\n              </th> -->\r\n\r\n            </tr>\r\n\r\n            <tr>\r\n              <!-- <th :class=\"firstTableHeaders[2].key\"><p>{{ firstTableHeaders[2].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`bank_response ${Client.id}`\">\r\n                <textarea :value=\"Client.bank_response\" name=\"bank_response\"/>\r\n              </th>\r\n              <th><p>{{ secondTableHeaders[4].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`patronomic ${Client.id}`\">\r\n                <textarea :value=\"Client.patronomic\" name=\"patronomic\"/>\r\n              </th> -->\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <!-- <th colspan=\"2\" rowspan=\"2\" class=\"cell\">\r\n                <button class=\"btn btn-primary send-data\" type=\"submit\">Отправить</button>\r\n              </th> -->\r\n              \r\n            </tr>\r\n\r\n            <tr>\r\n              \r\n              <!-- <th><p>{{ secondTableHeaders[5].value }}</p></th>\r\n              <th colspan=\"3\" class=\"cell\" :name=\"`adress ${Client.id}`\">\r\n                <textarea :value=\"Client.adress\" name=\"adress\"/>\r\n              </th> -->\r\n              <!-- ------------------------------------------------------------------ -->\r\n            </tr>\r\n\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"v-table__paginator\">\r\n    <div class=\"row\">\r\n    <paginate\r\n      :page-count=\"pages\"\r\n      :page-range=\"5\"\r\n      :click-handler=\"clickPage\"\r\n      :prev-text=\"'Предыдущий'\"\r\n      :next-text=\"'Следующий'\"\r\n      :container-class=\"'v-table__paginator'\">\r\n    </paginate>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n  import bankes from '@/components/bankes.vue'\r\n  import rangeFilter from '@/components/rangeFilter.vue'\r\n  import { mapGetters, mapActions } from 'vuex'\r\n  import Paginate from \"vuejs-paginate-next\";\r\n  import RangeFilterClients from '@/assets/rangeFilterDiapason.js'\r\n  import { GetData } from '@/assets/FetchRequest.js'\r\n\r\n  export default {\r\n      name: 'bodyTable',\r\n      data() {\r\n        return {\r\n          clientsPerPage: 2,\r\n          pageNumber: 1,\r\n        }\r\n      },\r\n      components: {\r\n        bankes,\r\n        Paginate,\r\n        rangeFilter,\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"firstTableHeaders\", \"secondTableHeaders\", \"thirdTableHeaders\", \r\n        \"tableBody\", \"additionalComments\", \"clientsTypeForOperators\", \"statisticsData\", \"paginateData\"]),\r\n\r\n        howClients () {\r\n          return this.tableBody.length\r\n        },\r\n\r\n        // pages () {\r\n        //   return Math.ceil(this.tableBody.length / this.clientsPerPage)\r\n        // },\r\n        pages () {\r\n          return Math.ceil(this.paginateData / this.clientsPerPage)\r\n        },\r\n        paginatedClients () {\r\n          let from = (this.pageNumber -1) * this.clientsPerPage;\r\n          let to = from + this.clientsPerPage;\r\n          return this.tableBody.slice(from, to);\r\n        },\r\n        modelType () {\r\n            return localStorage.getItem('user_class_model')\r\n        }\r\n      },\r\n      methods: mapActions(['setVariablesFromLocalStorage', 'websocketConnect', 'getDataDRF']),\r\n      methods: {\r\n        UpdateScrollHeight (event) {\r\n          const currentTextareaField = document.getElementById(event.target.id);\r\n          currentTextareaField.style.cssText = `height: ${currentTextareaField, currentTextareaField.scrollHeight}px; overflow-y: hidden`;\r\n        },\r\n        clickPage (page) {\r\n          if (page !== '...'){\r\n            this.pageNumber = page;\r\n            localStorage.setItem('currentPage', page)\r\n          }\r\n\r\n        },\r\n        async rangeFilterClients (event) {\r\n          const RangeFilterClientsInstance = new RangeFilterClients(event, this.$store)\r\n          RangeFilterClientsInstance.updateStoreTableBody(this.tableBody)\r\n\r\n          let from = (this.pageNumber -1) * this.clientsPerPage;\r\n          let to = from + this.clientsPerPage;\r\n          let sliceDiapason = [from, to]\r\n\r\n          const GetDataInstance = new GetData()\r\n          let data = await GetDataInstance.returnSlice()\r\n\r\n          let dataForUpdate = data.data.paginate_data\r\n          this.$store.commit('updatePaginateData', dataForUpdate)\r\n        },\r\n      },\r\n      async mounted() {\r\n        this.$store.dispatch('setVariablesFromLocalStorage');\r\n        this.$store.dispatch('websocketConnect');\r\n        this.$store.dispatch('getDataDRF');\r\n      }\r\n  }\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th v-for=\"(header, head) in allHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n          <td v-if=\"header.value !== 'username'\">{{header.value}}</td>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\" class=\"container-fluid\" >\r\n        <td v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" class=\"col\" :class=\"fieldName\" :id=\"fieldName\">\r\n          <div>\r\n            <textarea \r\n              v-if=\"fieldName !== 'username_id'\" :id=\"`${Client.id} ${fieldName}`\" v-bind:value=\"field\" :name=\"fieldName\" \r\n              @input=\"UpdateScrollHeight\" @change=\"CreateInput\"\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table> -->\r\n  <!-- <div class=\"v-table__paginator\">\r\n    <div class=\"page\" \r\n        v-for=\"page in displayingPages\" :key=\"page\" :class=\"{'page__selected': page === pageNumber}\" @click=\"clickPage(page)\">\r\n          {{ page }}\r\n        </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"container fluid\"> -->\r\n    <!-- <div class=\"row\"> -->\r\n      <!-- <table class=\"table table-sm table-striped\">\r\n        <tbody>\r\n          <td v-for=\"Client in firstTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in firstTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in secondTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in secondTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\"/>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in thirdTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in thirdTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n        </tbody>\r\n      </table> -->\r\n    <!-- </div> -->\r\n  <!-- </div> -->"]},"metadata":{},"sourceType":"module"}