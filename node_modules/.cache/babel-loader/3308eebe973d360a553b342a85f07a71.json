{"ast":null,"code":"import _defineProperty from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _name$data$components;\n\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport bankes from '@/components/bankes.vue';\nimport { mapGetters, mapActions } from 'vuex';\nvar testArrayHead = {\n  'test': 'test',\n  'test2': 'test2',\n  'test3': 'test3'\n};\nvar testArrayBody = {\n  'body': 'body',\n  'body2': 'body2',\n  'body3': 'body3'\n};\nexport default (_name$data$components = {\n  name: 'bodyTable',\n  data: function data() {\n    return {\n      clientsPerPage: 1,\n      pageNumber: 1,\n      displayPages: 3,\n      testArrayHead: testArrayHead\n    };\n  },\n  components: {\n    bankes: bankes\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"allClients\", \"allHeaders\", \"allDropDownComments\"])), {}, {\n    pages: function pages() {\n      return Math.ceil(this.allClients.length / this.clientsPerPage);\n    },\n    paginatedClients: function paginatedClients() {\n      var from = (this.pageNumber - 1) * this.clientsPerPage;\n      var to = from + this.clientsPerPage;\n      return this.allClients.slice(from, to);\n    },\n    displayingPages: function displayingPages() {\n      var new_pages = Math.ceil(this.allClients.length / this.clientsPerPage);\n      var pageArray = [];\n\n      for (var step = 1; step < new_pages; step++) {\n        if (step < this.displayPages + 1) {\n          pageArray.push(step);\n        } else if (!pageArray.includes('...')) {\n          pageArray.push('...');\n        }\n      }\n\n      pageArray.push(new_pages);\n      return pageArray;\n    }\n  }),\n  methods: mapActions(['websocketConnect'])\n}, _defineProperty(_name$data$components, \"methods\", {\n  UpdateScrollHeight: function UpdateScrollHeight(event) {\n    var currentTextareaField = document.getElementById(event.target.id);\n    currentTextareaField.style.cssText = \"height: \".concat((currentTextareaField, currentTextareaField.scrollHeight), \"px; overflow-y: hidden\");\n  },\n  clickPage: function clickPage(page) {\n    if (page !== '...') {\n      this.pageNumber = page;\n    } else {\n      this.displayingPages = Math.ceil(this.allClients.length / this.clientsPerPage);\n    }\n  }\n}), _defineProperty(_name$data$components, \"mounted\", function mounted() {\n  var _this = this;\n\n  return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _this.$store.dispatch('websocketConnect');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n}), _name$data$components);","map":{"version":3,"mappings":";;;;;;;;;AA4CE,OAAOA,MAAP,MAAmB,yBAAnB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AAEA,IAAIC,aAAY,GAAI;AAClB,UAAQ,MADU;AAElB,WAAS,OAFS;AAGlB,WAAS;AAHS,CAApB;AAMA,IAAIC,aAAY,GAAI;AAClB,UAAQ,MADU;AAElB,WAAS,OAFS;AAGlB,WAAS;AAHS,CAApB;AAMA;AACIC,MAAI,EAAE,WADV;AAEIC,MAFJ,kBAEW;AACL,WAAO;AACLC,oBAAc,EAAE,CADX;AAELC,gBAAU,EAAE,CAFP;AAGLC,kBAAY,EAAE,CAHT;AAILN,mBAAY,EAAZA;AAJK,KAAP;AAMD,GATL;AAUIO,YAAU,EAAE;AACVV,UAAM,EAANA;AADU,GAVhB;AAaIW,UAAQ,kCACHV,UAAU,CAAC,CAAC,YAAD,EAAe,YAAf,EAA6B,qBAA7B,CAAD,CADP;AAGNW,SAHM,mBAGG;AACP,aAAOC,IAAI,CAACC,IAAL,CAAU,KAAKC,UAAL,CAAgBC,MAAhB,GAAyB,KAAKT,cAAxC,CAAP;AACD,KALK;AAMNU,oBANM,8BAMc;AAClB,UAAIC,IAAG,GAAI,CAAC,KAAKV,UAAL,GAAiB,CAAlB,IAAuB,KAAKD,cAAvC;AACA,UAAIY,EAAC,GAAID,IAAG,GAAI,KAAKX,cAArB;AACA,aAAO,KAAKQ,UAAL,CAAgBK,KAAhB,CAAsBF,IAAtB,EAA4BC,EAA5B,CAAP;AACD,KAVK;AAWNE,mBAXM,6BAWa;AACjB,UAAIC,SAAQ,GAAIT,IAAI,CAACC,IAAL,CAAU,KAAKC,UAAL,CAAgBC,MAAhB,GAAyB,KAAKT,cAAxC,CAAhB;AACA,UAAIgB,SAAQ,GAAI,EAAhB;;AAEA,WAAK,IAAIC,IAAG,GAAI,CAAhB,EAAmBA,IAAG,GAAIF,SAA1B,EAAqCE,IAAI,EAAzC,EAA6C;AACzC,YAAIA,IAAG,GAAI,KAAKf,YAAL,GAAoB,CAA/B,EAAiC;AAC/Bc,mBAAS,CAACE,IAAV,CAAeD,IAAf;AACF,SAFA,MAEO,IAAI,CAACD,SAAS,CAACG,QAAV,CAAmB,KAAnB,CAAL,EAAgC;AACrCH,mBAAS,CAACE,IAAV,CAAe,KAAf;AACF;AACJ;;AACAF,eAAS,CAACE,IAAV,CAAeH,SAAf;AACA,aAAOC,SAAP;AACF;AAxBM,IAbZ;AAuCII,SAAO,EAAEzB,UAAU,CAAC,CAAC,kBAAD,CAAD;AAvCvB,qDAwCa;AACP0B,oBADO,8BACaC,KADb,EACoB;AACzB,QAAMC,oBAAmB,GAAIC,QAAQ,CAACC,cAAT,CAAwBH,KAAK,CAACI,MAAN,CAAaC,EAArC,CAA7B;AACAJ,wBAAoB,CAACK,KAArB,CAA2BC,OAA3B,sBAAgDN,oBAAoB,EAAEA,oBAAoB,CAACO,YAA3F;AACD,GAJM;AAKPC,WALO,qBAKIC,IALJ,EAKU;AACf,QAAIA,IAAG,KAAM,KAAb,EAAmB;AACjB,WAAK/B,UAAL,GAAkB+B,IAAlB;AACF,KAFA,MAEO;AACL,WAAKlB,eAAL,GAAuBR,IAAI,CAACC,IAAL,CAAU,KAAKC,UAAL,CAAgBC,MAAhB,GAAyB,KAAKT,cAAxC,CAAvB;AACF;AAED;AAZM,CAxCb,wEAsDoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAI,CAACiC,MAAL,CAAYC,QAAZ,CAAqB,kBAArB;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB,CAxDJ","names":["bankes","mapGetters","mapActions","testArrayHead","testArrayBody","name","data","clientsPerPage","pageNumber","displayPages","components","computed","pages","Math","ceil","allClients","length","paginatedClients","from","to","slice","displayingPages","new_pages","pageArray","step","push","includes","methods","UpdateScrollHeight","event","currentTextareaField","document","getElementById","target","id","style","cssText","scrollHeight","clickPage","page","$store","dispatch"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\BodyTable.vue"],"sourcesContent":["<template>\r\n  <bankes/>\r\n  <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr v-for=\"(header, head) in testArrayHead\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n        <th>\r\n          {{ header }}\r\n        </th>\r\n        <th class=\"cell\">\r\n          <textarea v-bind:value=\"field\" :name=\"fieldName\"/>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n\r\n    </tbody>\r\n  </table>\r\n  <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n\r\n    </thead>\r\n    <tbody>\r\n\r\n    </tbody>\r\n  </table>\r\n  <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n\r\n    </thead>\r\n    <tbody>\r\n\r\n    </tbody>\r\n  </table>\r\n  \r\n  <div class=\"v-table__paginator\">\r\n    <div class=\"page\" \r\n        v-for=\"page in displayingPages\" :key=\"page\" :class=\"{'page__selected': page === pageNumber}\" @click=\"clickPage(page)\">\r\n          {{ page }}\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n  import bankes from '@/components/bankes.vue'\r\n  import { mapGetters, mapActions } from 'vuex'\r\n\r\n  let testArrayHead = {\r\n    'test': 'test', \r\n    'test2': 'test2', \r\n    'test3': 'test3'\r\n  }\r\n\r\n  let testArrayBody = {\r\n    'body': 'body', \r\n    'body2': 'body2', \r\n    'body3': 'body3'\r\n  }\r\n\r\n  export default {\r\n      name: 'bodyTable',\r\n      data() {\r\n        return {\r\n          clientsPerPage: 1,\r\n          pageNumber: 1,\r\n          displayPages: 3,\r\n          testArrayHead\r\n        }\r\n      },\r\n      components: {\r\n        bankes,\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"allClients\", \"allHeaders\", \"allDropDownComments\"]),\r\n\r\n        pages () {\r\n          return Math.ceil(this.allClients.length / this.clientsPerPage)\r\n        },\r\n        paginatedClients () {\r\n          let from = (this.pageNumber -1) * this.clientsPerPage;\r\n          let to = from + this.clientsPerPage;\r\n          return this.allClients.slice(from, to);\r\n        },\r\n        displayingPages () {\r\n          let new_pages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n          let pageArray = []\r\n\r\n          for (let step = 1; step < new_pages; step++) {\r\n              if (step < this.displayPages + 1){\r\n                pageArray.push(step)\r\n              } else if (!pageArray.includes('...')) {\r\n                pageArray.push('...')\r\n              }\r\n          }\r\n          pageArray.push(new_pages)\r\n          return pageArray\r\n        }\r\n      },\r\n      methods: mapActions(['websocketConnect']),\r\n      methods: {\r\n        UpdateScrollHeight (event) {\r\n          const currentTextareaField = document.getElementById(event.target.id);\r\n          currentTextareaField.style.cssText = `height: ${currentTextareaField, currentTextareaField.scrollHeight}px; overflow-y: hidden`;\r\n        },\r\n        clickPage (page) {\r\n          if (page !== '...'){\r\n            this.pageNumber = page;\r\n          } else {\r\n            this.displayingPages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n          }\r\n          \r\n        },\r\n      },\r\n      async mounted() {\r\n        this.$store.dispatch('websocketConnect');\r\n      }\r\n  }\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th v-for=\"(header, head) in allHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n          <td v-if=\"header.value !== 'username'\">{{header.value}}</td>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\" class=\"container-fluid\" >\r\n        <td v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" class=\"col\" :class=\"fieldName\" :id=\"fieldName\">\r\n          <div>\r\n            <textarea \r\n              v-if=\"fieldName !== 'username_id'\" :id=\"`${Client.id} ${fieldName}`\" v-bind:value=\"field\" :name=\"fieldName\" \r\n              @input=\"UpdateScrollHeight\" @change=\"CreateInput\"\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table> -->"]},"metadata":{},"sourceType":"module"}