{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"v-table__paginator\"\n}, [/*#__PURE__*/_createCommentVNode(\" <form name='pagination'>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputStartDiapason\\\" placeholder=\\\"Начало диапазона\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"how_need_clients\\\" placeholder=\\\"Количество клиентов\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"buttonDiapason\\\" @click=\\\"setUpDiapason\\\">Вывести клиентов</button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"buttonDiapasonNext\\\" @click=\\\"nextPage\\\">Следующие</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </form> \")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, _toDisplayString($props.clients_data.length), 1\n  /* TEXT */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;8BACIA,oBA6BM,KA7BN,EA6BM;AA7BDC,OAAK,EAAC;AA6BL,CA7BN,EAA+B,cAE3BC,4lCAF2B,CAA/B;;AAAA;;;6DAAAC,YA8BAH,oBAAmC,KAAnC,EAAmC,IAAnC,EAAmCI,iBAA5BC,oBAAaC,MAAe,CAAnC,EAA0B;AAAA;AAA1B","names":["_createElementVNode","class","_createCommentVNode","_hoisted_1","_toDisplayString","$props","length"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\pagination.vue"],"sourcesContent":["<template>\r\n    <div class=\"v-table__paginator\">\r\n        \r\n        <!-- <form name='pagination'>\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-md-2\">\r\n                </div>\r\n\r\n                <div class=\"col-md-2\">\r\n                </div>\r\n\r\n                <div class=\"col-md-2\">\r\n                    <input type=\"number\" class=\"form-control\" id=\"inputStartDiapason\" placeholder=\"Начало диапазона\">\r\n                </div>\r\n\r\n                <div class=\"col-md-2\">\r\n                    <input type=\"number\" class=\"form-control\" id=\"how_need_clients\" placeholder=\"Количество клиентов\">\r\n                </div>\r\n\r\n                <div class=\"col-md-2\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\" id=\"buttonDiapason\" @click=\"setUpDiapason\">Вывести клиентов</button>\r\n                </div>\r\n\r\n                <div class=\"col-md-2\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\" id=\"buttonDiapasonNext\" @click=\"nextPage\">Следующие</button>\r\n                </div>\r\n\r\n            </div>\r\n        </form> -->\r\n    </div>\r\n    <div>{{clients_data.length }}</div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n    import { SetDiapasonToOperator } from '@/assets/setDiapasonToOperator.js'\r\n\r\n\r\n    export default{\r\n        props: {\r\n            clients_data: {\r\n                type: Array,\r\n                default: () => {\r\n                    return []\r\n                }\r\n            }\r\n        },\r\n        data(){\r\n            return {\r\n                clientsPerPage: 1\r\n            }\r\n        },\r\n        components: {},\r\n        methods: {\r\n        setUpDiapason (event) {\r\n            const InstanceSetDiapasonToOperator = new SetDiapasonToOperator(event)\r\n            InstanceSetDiapasonToOperator.setDiapasonToOperator()\r\n        },\r\n        nextPage (event) {\r\n            const InstanceSetDiapasonToOperator = new SetDiapasonToOperator(event)\r\n            InstanceSetDiapasonToOperator.next()\r\n        }\r\n        },\r\n        computed: {\r\n            pages () {\r\n                return Math.ceil(this.clients_data.length / this.clientsPerPage)\r\n            }\r\n        }\r\n  }\r\n</script>\r\n\r\n\r\n<style>\r\n    #buttonDiapasonNext {\r\n        height: 40px;\r\n    }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}