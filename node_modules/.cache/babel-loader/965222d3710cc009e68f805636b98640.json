{"ast":null,"code":"import _defineProperty from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/current_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _name$data$components;\n\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport bankes from '@/components/bankes.vue';\nimport rangeFilter from '@/components/rangeFilter.vue';\nimport { mapGetters, mapActions } from 'vuex';\nimport Paginate from \"vuejs-paginate-next\";\nimport RangeFilterClients from '@/assets/rangeFilterDiapason.js';\nexport default (_name$data$components = {\n  name: 'bodyTable',\n  data: function data() {\n    return {\n      clientsPerPage: 2,\n      pageNumber: 1\n    };\n  },\n  components: {\n    bankes: bankes,\n    Paginate: Paginate,\n    rangeFilter: rangeFilter\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"firstTableHeaders\", \"secondTableHeaders\", \"thirdTableHeaders\", \"tableBody\", \"additionalComments\", \"clientsTypeForOperators\", \"statisticsData\"])), {}, {\n    howClients: function howClients() {\n      return this.tableBody.length;\n    },\n    pages: function pages() {\n      return Math.ceil(this.tableBody.length / this.clientsPerPage);\n    },\n    paginatedClients: function paginatedClients() {\n      var from = (this.pageNumber - 1) * this.clientsPerPage;\n      var to = from + this.clientsPerPage;\n      return this.tableBody.slice(from, to);\n    }\n  }),\n  methods: mapActions(['websocketConnect'])\n}, _defineProperty(_name$data$components, \"methods\", {\n  UpdateScrollHeight: function UpdateScrollHeight(event) {\n    var currentTextareaField = document.getElementById(event.target.id);\n    currentTextareaField.style.cssText = \"height: \".concat((currentTextareaField, currentTextareaField.scrollHeight), \"px; overflow-y: hidden\");\n  },\n  clickPage: function clickPage(page) {\n    if (page !== '...') {\n      this.pageNumber = page;\n    } else {\n      this.displayingPages = Math.ceil(this.tableBody.length / this.clientsPerPage);\n    }\n  },\n  rangeFilterClients: function rangeFilterClients(event) {\n    var RangeFilterClientsInstance = new RangeFilterClients(event, this.$store);\n    RangeFilterClientsInstance.updateStoreTableBody(this.tableBody);\n  }\n}), _defineProperty(_name$data$components, \"mounted\", function mounted() {\n  var _this = this;\n\n  return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _this.$store.dispatch('websocketConnect');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n}), _name$data$components);","map":{"version":3,"mappings":";;;;;;;;AA8JE,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AAEA;AACIC,MAAI,EAAE,WADV;AAEIC,MAFJ,kBAEW;AACL,WAAO;AACLC,oBAAc,EAAE,CADX;AAELC,gBAAU,EAAE;AAFP,KAAP;AAID,GAPL;AAQIC,YAAU,EAAE;AACVV,UAAM,EAANA,MADU;AAEVI,YAAQ,EAARA,QAFU;AAGVH,eAAW,EAAXA;AAHU,GARhB;AAaIU,UAAQ,kCACHT,UAAU,CAAC,CAAC,mBAAD,EAAsB,oBAAtB,EAA4C,mBAA5C,EACd,WADc,EACD,oBADC,EACqB,yBADrB,EACgD,gBADhD,CAAD,CADP;AAINU,cAJM,wBAIQ;AACZ,aAAO,KAAKC,SAAL,CAAeC,MAAtB;AACD,KANK;AAQNC,SARM,mBAQG;AACP,aAAOC,IAAI,CAACC,IAAL,CAAU,KAAKJ,SAAL,CAAeC,MAAf,GAAwB,KAAKN,cAAvC,CAAP;AACD,KAVK;AAWNU,oBAXM,8BAWc;AAClB,UAAIC,IAAG,GAAI,CAAC,KAAKV,UAAL,GAAiB,CAAlB,IAAuB,KAAKD,cAAvC;AACA,UAAIY,EAAC,GAAID,IAAG,GAAI,KAAKX,cAArB;AACA,aAAO,KAAKK,SAAL,CAAeQ,KAAf,CAAqBF,IAArB,EAA2BC,EAA3B,CAAP;AACF;AAfM,IAbZ;AA8BIE,SAAO,EAAEnB,UAAU,CAAC,CAAC,kBAAD,CAAD;AA9BvB,qDA+Ba;AACPoB,oBADO,8BACaC,KADb,EACoB;AACzB,QAAMC,oBAAmB,GAAIC,QAAQ,CAACC,cAAT,CAAwBH,KAAK,CAACI,MAAN,CAAaC,EAArC,CAA7B;AACAJ,wBAAoB,CAACK,KAArB,CAA2BC,OAA3B,sBAAgDN,oBAAoB,EAAEA,oBAAoB,CAACO,YAA3F;AACD,GAJM;AAKPC,WALO,qBAKIC,IALJ,EAKU;AACf,QAAIA,IAAG,KAAM,KAAb,EAAmB;AACjB,WAAKzB,UAAL,GAAkByB,IAAlB;AACF,KAFA,MAEO;AACL,WAAKC,eAAL,GAAuBnB,IAAI,CAACC,IAAL,CAAU,KAAKJ,SAAL,CAAeC,MAAf,GAAwB,KAAKN,cAAvC,CAAvB;AACF;AACD,GAXM;AAYP4B,oBAZO,8BAYaZ,KAZb,EAYoB;AACzB,QAAMa,0BAAyB,GAAI,IAAIhC,kBAAJ,CAAuBmB,KAAvB,EAA8B,KAAKc,MAAnC,CAAnC;AACAD,8BAA0B,CAACE,oBAA3B,CAAgD,KAAK1B,SAArD;AACD;AAfM,CA/Bb,wEAgDoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAI,CAACyB,MAAL,CAAYE,QAAZ,CAAqB,kBAArB;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB,CAlDJ","names":["bankes","rangeFilter","mapGetters","mapActions","Paginate","RangeFilterClients","name","data","clientsPerPage","pageNumber","components","computed","howClients","tableBody","length","pages","Math","ceil","paginatedClients","from","to","slice","methods","UpdateScrollHeight","event","currentTextareaField","document","getElementById","target","id","style","cssText","scrollHeight","clickPage","page","displayingPages","rangeFilterClients","RangeFilterClientsInstance","$store","updateStoreTableBody","dispatch"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\BodyTable.vue"],"sourcesContent":["<template>\r\n  <bankes/>\r\n  <div class=\"container fluid customData\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <rangeFilter @rangeFilterClients=\"rangeFilterClients\"/>\r\n      </div>\r\n      <div class=\"col-md-4\" :class=\"{'page__selected': page === 'pageNumber'}\">\r\n        <div class=\"data_non_called_clients\">\r\n          <ul class=\"list-group\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">Альфабанк:\r\n                <span class=\"badge badge-primary badge-pill statisticsDataSpan\">{{ statisticsData.alfa_data_json }}</span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">ВтБ:\r\n                <span class=\"badge badge-primary badge-pill statisticsDataSpan\">{{ statisticsData.vtb_data_json }}</span>\r\n                </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">Открытие:\r\n                <span class=\"badge badge-primary badge-pill statisticsDataSpan\">{{ statisticsData.otkritie_data_json }}</span>\r\n                </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">Точка:\r\n                <span class=\"badge badge-primary badge-pill statisticsDataSpan\">{{ statisticsData.tochka_data_json }}</span>\r\n                </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  <div class=\"container fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8\">\r\n        <table class=\"table table-sm table-striped\" :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\">\r\n          <thead class=\"table-dark\">\r\n            <tr>\r\n\r\n              <th rowspan=\"2\" :class=\"firstTableHeaders[0].key\"><p>{{ firstTableHeaders[0].value }}</p></th>\r\n              <th class=\"cell\" rowspan=\"2\" :name=\"`id ${Client.id}`\">\r\n                {{ Client.id }}\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th><p>{{ secondTableHeaders[0].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`inn ${Client.id}`\">\r\n                <textarea :value=\"Client.inn\" name=\"inn\"/>\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th><p>{{ thirdTableHeaders[0].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`comment ${Client.id}`\">\r\n                <textarea :value=\"Client.comment\" name=\"comment\"/>\r\n              </th>\r\n\r\n            </tr>\r\n            <tr>\r\n              <th><p>{{ secondTableHeaders[1].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`name_company ${Client.id}`\">\r\n                <textarea :value=\"Client.name_company\" name=\"name_company\"/>\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th><p>{{ thirdTableHeaders[1].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`additional_comment ${Client.id}`\">\r\n                <select class=\"form-select\">\r\n                  <option>Доп. коммент</option>\r\n                  <option v-for=\"comment in additionalComments\" v-bind:key=\"comment.id\">{{comment.list}}</option>\r\n                </select>\r\n              </th>\r\n\r\n            </tr>\r\n            <tr>\r\n\r\n              <th :class=\"firstTableHeaders[1].key\"><p>{{ firstTableHeaders[1].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`status_inn ${Client.id}`\">\r\n                <textarea :value=\"Client.status_inn\" name=\"status_inn\"/>\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th><p>{{ secondTableHeaders[2].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`surname ${Client.id}`\">\r\n                <textarea :value=\"Client.surname\" name=\"surname\"/>\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th><p>{{ thirdTableHeaders[2].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`send_rko ${Client.id}`\">\r\n                <input type=\"checkbox\" class=\"btn-check send_rko_checkbox\" id=\"btn-check-outlined send_rko_checkbox\" autocomplete=\"off\">\r\n                <label class=\"btn btn-outline-primary send_rko_checkbox\" for=\"btn-check-outlined send_rko_checkbox\">Отправить</label><br>\r\n              </th>\r\n\r\n            </tr>\r\n\r\n            <tr>\r\n\r\n              <th :class=\"firstTableHeaders[3].key\"><p>{{ firstTableHeaders[3].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`bank_city ${Client.id}`\">\r\n                <textarea :value=\"Client.bank_city\" name=\"bank_city\"/>\r\n              </th>\r\n              <th><p>{{ secondTableHeaders[3].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`first_name ${Client.id}`\">\r\n                <textarea :value=\"Client.first_name\" name=\"first_name\"/>\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th><p>{{ thirdTableHeaders[3].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`client_type ${Client.id}`\">\r\n                <select class=\"form-select\">\r\n                  <option>Тип клиента</option>\r\n                  <option v-for=\"clientType in clientsTypeForOperators\" v-bind:key=\"clientType.key\" :id=\"clientType.key\">{{clientType.value}}</option>\r\n                </select>\r\n              </th>\r\n\r\n            </tr>\r\n\r\n            <tr>\r\n              <th :class=\"firstTableHeaders[2].key\"><p>{{ firstTableHeaders[2].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`bank_response ${Client.id}`\">\r\n                <textarea :value=\"Client.bank_response\" name=\"bank_response\"/>\r\n              </th>\r\n              <th><p>{{ secondTableHeaders[4].value }}</p></th>\r\n              <th class=\"cell\" :name=\"`patronomic ${Client.id}`\">\r\n                <textarea :value=\"Client.patronomic\" name=\"patronomic\"/>\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n              <th colspan=\"2\" rowspan=\"2\" class=\"cell\">\r\n                <button class=\"btn btn-primary send-data\" type=\"submit\">Отправить</button>\r\n              </th>\r\n              \r\n            </tr>\r\n\r\n            <tr>\r\n              \r\n              <th><p>{{ secondTableHeaders[5].value }}</p></th>\r\n              <th colspan=\"3\" class=\"cell\" :name=\"`adress ${Client.id}`\">\r\n                <textarea :value=\"Client.adress\" name=\"adress\"/>\r\n              </th>\r\n              <!-- ------------------------------------------------------------------ -->\r\n            </tr>\r\n\r\n          </thead>\r\n        </table>\r\n      </div>\r\n      <!-- <div class=\"col-md-4\">\r\n        <rangeFilter @rangeFilterClients=\"rangeFilterClients\"/>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"v-table__paginator\">\r\n    <div class=\"row\">\r\n    <paginate\r\n      :page-count=\"pages\"\r\n      :page-range=\"5\"\r\n      :click-handler=\"clickPage\"\r\n      :prev-text=\"'Предыдущий'\"\r\n      :next-text=\"'Следующий'\"\r\n      :container-class=\"'v-table__paginator'\">\r\n    </paginate>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n  import bankes from '@/components/bankes.vue'\r\n  import rangeFilter from '@/components/rangeFilter.vue'\r\n  import { mapGetters, mapActions } from 'vuex'\r\n  import Paginate from \"vuejs-paginate-next\";\r\n  import RangeFilterClients from '@/assets/rangeFilterDiapason.js'\r\n\r\n  export default {\r\n      name: 'bodyTable',\r\n      data() {\r\n        return {\r\n          clientsPerPage: 2,\r\n          pageNumber: 1,\r\n        }\r\n      },\r\n      components: {\r\n        bankes,\r\n        Paginate,\r\n        rangeFilter,\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"firstTableHeaders\", \"secondTableHeaders\", \"thirdTableHeaders\", \r\n        \"tableBody\", \"additionalComments\", \"clientsTypeForOperators\", \"statisticsData\"]),\r\n\r\n        howClients () {\r\n          return this.tableBody.length\r\n        },\r\n\r\n        pages () {\r\n          return Math.ceil(this.tableBody.length / this.clientsPerPage)\r\n        },\r\n        paginatedClients () {\r\n          let from = (this.pageNumber -1) * this.clientsPerPage;\r\n          let to = from + this.clientsPerPage;\r\n          return this.tableBody.slice(from, to);\r\n        }\r\n      },\r\n      methods: mapActions(['websocketConnect']),\r\n      methods: {\r\n        UpdateScrollHeight (event) {\r\n          const currentTextareaField = document.getElementById(event.target.id);\r\n          currentTextareaField.style.cssText = `height: ${currentTextareaField, currentTextareaField.scrollHeight}px; overflow-y: hidden`;\r\n        },\r\n        clickPage (page) {\r\n          if (page !== '...'){\r\n            this.pageNumber = page;\r\n          } else {\r\n            this.displayingPages = Math.ceil(this.tableBody.length / this.clientsPerPage)\r\n          }\r\n        },\r\n        rangeFilterClients (event) {\r\n          const RangeFilterClientsInstance = new RangeFilterClients(event, this.$store)\r\n          RangeFilterClientsInstance.updateStoreTableBody(this.tableBody)\r\n        },\r\n      },\r\n      async mounted() {\r\n        this.$store.dispatch('websocketConnect');\r\n      }\r\n  }\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n// <div class=\"data_non_called_clients\">\r\n//     <ul>\r\n//         <li>Альфабанк: {{ alfabank_data_json }}</li>\r\n//         <li>ВтБ: {{ vtb_data_json }}</li>\r\n//         <li>Открытие: {{ otkritie_data_json }}</li>\r\n//         <li>Точка: {{ tochka_data_json }}</li>\r\n//     </ul>\r\n// </div>\r\n\r\n\r\n\r\n<!-- <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th v-for=\"(header, head) in allHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n          <td v-if=\"header.value !== 'username'\">{{header.value}}</td>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\" class=\"container-fluid\" >\r\n        <td v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" class=\"col\" :class=\"fieldName\" :id=\"fieldName\">\r\n          <div>\r\n            <textarea \r\n              v-if=\"fieldName !== 'username_id'\" :id=\"`${Client.id} ${fieldName}`\" v-bind:value=\"field\" :name=\"fieldName\" \r\n              @input=\"UpdateScrollHeight\" @change=\"CreateInput\"\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table> -->\r\n  <!-- <div class=\"v-table__paginator\">\r\n    <div class=\"page\" \r\n        v-for=\"page in displayingPages\" :key=\"page\" :class=\"{'page__selected': page === pageNumber}\" @click=\"clickPage(page)\">\r\n          {{ page }}\r\n        </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"container fluid\"> -->\r\n    <!-- <div class=\"row\"> -->\r\n      <!-- <table class=\"table table-sm table-striped\">\r\n        <tbody>\r\n          <td v-for=\"Client in firstTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in firstTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in secondTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in secondTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\"/>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in thirdTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in thirdTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n        </tbody>\r\n      </table> -->\r\n    <!-- </div> -->\r\n  <!-- </div> -->"]},"metadata":{},"sourceType":"module"}