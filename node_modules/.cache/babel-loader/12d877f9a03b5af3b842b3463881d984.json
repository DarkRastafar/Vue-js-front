{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = {\n  class: \"table table-sm table-striped\"\n};\nvar _hoisted_2 = {\n  class: \"table-dark\"\n};\nvar _hoisted_3 = {\n  class: \"cell\"\n};\nvar _hoisted_4 = [\"value\"];\nvar _hoisted_5 = {\n  class: \"cell\"\n};\nvar _hoisted_6 = [\"value\"];\nvar _hoisted_7 = {\n  class: \"cell\"\n};\nvar _hoisted_8 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_bankes = _resolveComponent(\"bankes\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_bankes), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.howClients, function (index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"container fluid\",\n      key: index\n    }, [_createElementVNode(\"table\", _hoisted_1, [_createElementVNode(\"thead\", _hoisted_2, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.firstTableHeaders[0].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_3, [_createElementVNode(\"textarea\", {\n      value: _ctx.firstTableBody[0].id\n    }, null, 8\n    /* PROPS */\n    , _hoisted_4)])]), _createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.firstTableHeaders[1].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_5, [_createElementVNode(\"textarea\", {\n      value: _ctx.firstTableBody[1].id\n    }, null, 8\n    /* PROPS */\n    , _hoisted_6)])]), _createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.firstTableHeaders[2].value), 1\n    /* TEXT */\n    )]), _createElementVNode(\"th\", _hoisted_7, [_createElementVNode(\"textarea\", {\n      value: _ctx.firstTableBody[Number(index - 1)].id\n    }, null, 8\n    /* PROPS */\n    , _hoisted_8)])])])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;AAIWA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AAGLA,OAAK,EAAC;;;;AAMLA,OAAK,EAAC;;;;AAMNA,OAAK,EAAC;;;;;;6DAnBnBC,aAASC,iBAAT,sBAEAC,oBAwBMC,SAxBN,EAwBM,IAxBN,EAwBMC,YAxBuCC,mBAwBvC,EAxBiD,UAAnBC,KAAmB,EAAd;yBAAzCJ,oBAwBM,KAxBN,EAwBM;AAxBDH,WAAK,EAAC,iBAwBL;AAxBoDQ,SAAG,EAAED;AAwBzD,KAxBN,GACEE,oBAsBQ,OAtBR,cAsBQ,CArBNA,oBAoBQ,OApBR,cAoBQ,CAnBNA,oBAKK,IALL,EAKK,IALL,EAKK,CAJHA,oBAAgD,IAAhD,EAAgD,IAAhD,EAAgD,CAA5CA,oBAAuC,GAAvC,EAAuC,IAAvC,EAAuCC,iBAAjCC,uBAAiB,CAAjB,EAAqBC,KAAY,CAAvC,EAAgC;AAAA;AAAhC,KAA4C,CAAhD,CAIG,EAHHH,oBAEK,IAFL,cAEK,CADHA,oBAAyC,UAAzC,EAAyC;AAA9BG,WAAK,EAAED,oBAAc,CAAd,EAAkBE;AAAK,KAAzC;;AAAA,iBACG,CAFL,CAGG,CALL,CAmBM,EAbNJ,oBAKK,IALL,EAKK,IALL,EAKK,CAJHA,oBAAgD,IAAhD,EAAgD,IAAhD,EAAgD,CAA5CA,oBAAuC,GAAvC,EAAuC,IAAvC,EAAuCC,iBAAjCC,uBAAiB,CAAjB,EAAqBC,KAAY,CAAvC,EAAgC;AAAA;AAAhC,KAA4C,CAAhD,CAIG,EAHFH,oBAEI,IAFJ,cAEI,CADHA,oBAAyC,UAAzC,EAAyC;AAA9BG,WAAK,EAAED,oBAAc,CAAd,EAAkBE;AAAK,KAAzC;;AAAA,iBACG,CAFJ,CAGE,CALL,CAaM,EAPNJ,oBAKK,IALL,EAKK,IALL,EAKK,CAJHA,oBAAgD,IAAhD,EAAgD,IAAhD,EAAgD,CAA5CA,oBAAuC,GAAvC,EAAuC,IAAvC,EAAuCC,iBAAjCC,uBAAiB,CAAjB,EAAqBC,KAAY,CAAvC,EAAgC;AAAA;AAAhC,KAA4C,CAAhD,CAIG,EAHFH,oBAEI,IAFJ,cAEI,CADHA,oBAAyD,UAAzD,EAAyD;AAA9CG,WAAK,EAAED,oBAAeG,MAAM,CAACP,KAAK,IAAN,CAArB,EAAkCM;AAAK,KAAzD;;AAAA,iBACG,CAFJ,CAGE,CALL,CAOM,CApBR,CAqBM,CAtBR,EADF;GAwBM,CAxBN;;AAAA","names":["class","_createVNode","_component_bankes","_createElementBlock","_Fragment","_renderList","$options","index","key","_createElementVNode","_toDisplayString","_ctx","value","id","Number"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\BodyTable.vue"],"sourcesContent":["<template>\r\n  <bankes/>\r\n\r\n  <div class=\"container fluid\" v-for=\"index in howClients\" :key=\"index\">\r\n    <table class=\"table table-sm table-striped\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th><p>{{ firstTableHeaders[0].value }}</p></th>\r\n          <th class=\"cell\">\r\n            <textarea :value=\"firstTableBody[0].id\"/>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th><p>{{ firstTableHeaders[1].value }}</p></th>\r\n           <th class=\"cell\">\r\n            <textarea :value=\"firstTableBody[1].id\"/>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th><p>{{ firstTableHeaders[2].value }}</p></th>\r\n           <th class=\"cell\">\r\n            <textarea :value=\"firstTableBody[Number(index - 1)].id\"/>\r\n          </th>\r\n        </tr>\r\n        \r\n      </thead>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n  import bankes from '@/components/bankes.vue'\r\n  import { mapGetters, mapActions } from 'vuex'\r\n\r\n  export default {\r\n      name: 'bodyTable',\r\n      data() {\r\n        return {\r\n          clientsPerPage: 1,\r\n          pageNumber: 1,\r\n          displayPages: 3,\r\n        }\r\n      },\r\n      components: {\r\n        bankes,\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"firstTableHeaders\", \"secondTableHeaders\", \"thirdTableHeaders\", \"firstTableBody\", \"secondTableBody\", \"thirdTableBody\"]),\r\n\r\n        howClients () {\r\n          return (this.secondTableBody.length)\r\n        },\r\n\r\n        // pages () {\r\n        //   return Math.ceil(this.allClients.length / this.clientsPerPage)\r\n        // },\r\n        // paginatedClients () {\r\n        //   let from = (this.pageNumber -1) * this.clientsPerPage;\r\n        //   let to = from + this.clientsPerPage;\r\n        //   return this.allClients.slice(from, to);\r\n        // },\r\n        // displayingPages () {\r\n        //   let new_pages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n        //   let pageArray = []\r\n\r\n        //   for (let step = 1; step < new_pages; step++) {\r\n        //       if (step < this.displayPages + 1){\r\n        //         pageArray.push(step)\r\n        //       } else if (!pageArray.includes('...')) {\r\n        //         pageArray.push('...')\r\n        //       }\r\n        //   }\r\n        //   pageArray.push(new_pages)\r\n        //   return pageArray\r\n        // }\r\n      },\r\n      methods: mapActions(['websocketConnect']),\r\n      methods: {\r\n        UpdateScrollHeight (event) {\r\n          const currentTextareaField = document.getElementById(event.target.id);\r\n          currentTextareaField.style.cssText = `height: ${currentTextareaField, currentTextareaField.scrollHeight}px; overflow-y: hidden`;\r\n        },\r\n        clickPage (page) {\r\n          if (page !== '...'){\r\n            this.pageNumber = page;\r\n          } else {\r\n            this.displayingPages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n          }\r\n          \r\n        },\r\n      },\r\n      async mounted() {\r\n        this.$store.dispatch('websocketConnect');\r\n      }\r\n  }\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th v-for=\"(header, head) in allHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n          <td v-if=\"header.value !== 'username'\">{{header.value}}</td>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\" class=\"container-fluid\" >\r\n        <td v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" class=\"col\" :class=\"fieldName\" :id=\"fieldName\">\r\n          <div>\r\n            <textarea \r\n              v-if=\"fieldName !== 'username_id'\" :id=\"`${Client.id} ${fieldName}`\" v-bind:value=\"field\" :name=\"fieldName\" \r\n              @input=\"UpdateScrollHeight\" @change=\"CreateInput\"\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table> -->\r\n  <!-- <div class=\"v-table__paginator\">\r\n    <div class=\"page\" \r\n        v-for=\"page in displayingPages\" :key=\"page\" :class=\"{'page__selected': page === pageNumber}\" @click=\"clickPage(page)\">\r\n          {{ page }}\r\n        </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"container fluid\"> -->\r\n    <!-- <div class=\"row\"> -->\r\n      <!-- <table class=\"table table-sm table-striped\">\r\n        <tbody>\r\n          <td v-for=\"Client in firstTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in firstTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in secondTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in secondTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\"/>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n          <td v-for=\"Client in thirdTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <div class=\"col-md-4\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in thirdTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n        </tbody>\r\n      </table> -->\r\n    <!-- </div> -->\r\n  <!-- </div> -->"]},"metadata":{},"sourceType":"module"}