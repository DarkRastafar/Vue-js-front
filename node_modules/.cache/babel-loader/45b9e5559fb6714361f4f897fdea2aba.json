{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  class: \"table table-sm table-striped\"\n};\nvar _hoisted_2 = {\n  class: \"table-dark\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"cell\"\n}, [/*#__PURE__*/_createElementVNode(\"textarea\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"tbody\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_5 = /*#__PURE__*/_createElementVNode(\"table\", {\n  class: \"table table-sm table-striped\"\n}, [/*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}), /*#__PURE__*/_createElementVNode(\"tbody\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_6 = /*#__PURE__*/_createElementVNode(\"table\", {\n  class: \"table table-sm table-striped\"\n}, [/*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}), /*#__PURE__*/_createElementVNode(\"tbody\")], -1\n/* HOISTED */\n);\n\nvar _hoisted_7 = {\n  class: \"v-table__paginator\"\n};\nvar _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_bankes = _resolveComponent(\"bankes\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_bankes), _createElementVNode(\"table\", _hoisted_1, [_createElementVNode(\"thead\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.testArrayHead, _ctx.testArrayBody, function (header, head) {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: head,\n      class: _normalizeClass([\"col\", header.key])\n    }, [_createElementVNode(\"th\", null, _toDisplayString(header), 1\n    /* TEXT */\n    ), _hoisted_3], 2\n    /* CLASS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_4]), _hoisted_5, _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayingPages, function (page) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"page\", {\n        'page__selected': page === $data.pageNumber\n      }]),\n      key: page,\n      onClick: function onClick($event) {\n        return $options.clickPage(page);\n      }\n    }, _toDisplayString(page), 11\n    /* TEXT, CLASS, PROPS */\n    , _hoisted_8);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;AAESA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;8BAKTC,oBAEK,IAFL,EAEK;AAFDD,OAAK,EAAC;AAEL,CAFL,EAAgB,cACdC,oBAAW,UAAX,CADc,CAAhB;;AAAA;;8BAKJA,oBAEQ,OAFR,EAEQ,IAFR,EAEQ,IAFR,EAEQ;AAAA;AAFR;;8BAIFA,oBAOQ,OAPR,EAOQ;AAPDD,OAAK,EAAC;AAOL,CAPR,EAA2C,cACzCC,oBAEQ,OAFR,EAEQ;AAFDD,OAAK,EAAC;AAEL,CAFR,CADyC,eAIzCC,oBAEQ,OAFR,CAJyC,CAA3C;;AAAA;;8BAQAA,oBAOQ,OAPR,EAOQ;AAPDD,OAAK,EAAC;AAOL,CAPR,EAA2C,cACzCC,oBAEQ,OAFR,EAEQ;AAFDD,OAAK,EAAC;AAEL,CAFR,CADyC,eAIzCC,oBAEQ,OAFR,CAJyC,CAA3C;;AAAA;;;AASKD,OAAK,EAAC;;;;;;6DAjCXE,aAASC,iBAAT,GACAF,oBAcQ,OAdR,cAcQ,CAbNA,oBASQ,OATR,cASQ,oBARNG,oBAOKC,SAPL,EAOK,IAPL,EAOKC,YAPwBC,mBAOxB,EAPuCC,kBAOvC,EAPoD,UAA7CC,MAA6C,EAArCC,IAAqC,EAAjC;yBAAxBN,oBAOK,IAPL,EAOK;AAPuDO,SAAG,EAAED,IAO5D;AAPkEV,WAAK,mBAAC,KAAD,EAAeS,MAAM,CAACE,GAAtB;AAOvE,KAPL,GACEV,oBAEK,IAFL,EAEK,IAFL,EAEKW,iBADAH,MACA,CAFL,EACW;AAAA;AADX,OAGAI,WAJF;;AAAA;GAOK,CAPL;;AAAA,GAQM,EATR,CAaM,EAHNC,UAGM,CAdR,GAeAC,YAQAC,YASAf,oBAKM,KALN,cAKM,oBAJJG,oBAGUC,SAHV,EAGU,IAHV,EAGUC,YAFSW,wBAET,EAFwB,UAAvBC,IAAuB,EAAnB;yBADfd,oBAGU,KAHV,EAGU;AAHLJ,WAAK,mBAAC,MAAD,EAAO;AAAA,0BAC0DkB,IAAI,KAAKX;AADnE,OAAP,EAGA;AAF2BI,SAAG,EAAEO,IAEhC;AAFwFC,aAAK;AAAA,eAAEF,mBAAUC,IAAV,CAAF;AAAA;AAE7F,KAHV,mBAESA,KAFT,EAEa;AAAA;AAFb,MAEaE,UAFb;GAGU,CAHV;;AAAA,GAII,EALN","names":["class","_createElementVNode","_createVNode","_component_bankes","_createElementBlock","_Fragment","_renderList","$data","_ctx","header","head","key","_toDisplayString","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","$options","page","onClick","_hoisted_8"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\BodyTable.vue"],"sourcesContent":["<template>\r\n  <bankes/>\r\n  <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr v-for=\"(header, head) in testArrayHead, testArrayBody\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n        <th>\r\n          {{ header }}\r\n        </th>\r\n        <th class=\"cell\">\r\n          <textarea/>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n\r\n    </tbody>\r\n  </table>\r\n  <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n\r\n    </thead>\r\n    <tbody>\r\n\r\n    </tbody>\r\n  </table>\r\n  <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n\r\n    </thead>\r\n    <tbody>\r\n\r\n    </tbody>\r\n  </table>\r\n  \r\n  <div class=\"v-table__paginator\">\r\n    <div class=\"page\" \r\n        v-for=\"page in displayingPages\" :key=\"page\" :class=\"{'page__selected': page === pageNumber}\" @click=\"clickPage(page)\">\r\n          {{ page }}\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n  import bankes from '@/components/bankes.vue'\r\n  import { mapGetters, mapActions } from 'vuex'\r\n\r\n  let testArrayHead = {\r\n    'test': 'test', \r\n    'test2': 'test2', \r\n    'test3': 'test3'\r\n  }\r\n\r\n  let testArrayBody = {\r\n    'body': 'body', \r\n    'body2': 'body2', \r\n    'body3': 'body3'\r\n  }\r\n\r\n  export default {\r\n      name: 'bodyTable',\r\n      data() {\r\n        return {\r\n          clientsPerPage: 1,\r\n          pageNumber: 1,\r\n          displayPages: 3,\r\n          testArrayHead\r\n        }\r\n      },\r\n      components: {\r\n        bankes,\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"allClients\", \"allHeaders\", \"allDropDownComments\"]),\r\n\r\n        pages () {\r\n          return Math.ceil(this.allClients.length / this.clientsPerPage)\r\n        },\r\n        paginatedClients () {\r\n          let from = (this.pageNumber -1) * this.clientsPerPage;\r\n          let to = from + this.clientsPerPage;\r\n          return this.allClients.slice(from, to);\r\n        },\r\n        displayingPages () {\r\n          let new_pages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n          let pageArray = []\r\n\r\n          for (let step = 1; step < new_pages; step++) {\r\n              if (step < this.displayPages + 1){\r\n                pageArray.push(step)\r\n              } else if (!pageArray.includes('...')) {\r\n                pageArray.push('...')\r\n              }\r\n          }\r\n          pageArray.push(new_pages)\r\n          return pageArray\r\n        }\r\n      },\r\n      methods: mapActions(['websocketConnect']),\r\n      methods: {\r\n        UpdateScrollHeight (event) {\r\n          const currentTextareaField = document.getElementById(event.target.id);\r\n          currentTextareaField.style.cssText = `height: ${currentTextareaField, currentTextareaField.scrollHeight}px; overflow-y: hidden`;\r\n        },\r\n        clickPage (page) {\r\n          if (page !== '...'){\r\n            this.pageNumber = page;\r\n          } else {\r\n            this.displayingPages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n          }\r\n          \r\n        },\r\n      },\r\n      async mounted() {\r\n        this.$store.dispatch('websocketConnect');\r\n      }\r\n  }\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th v-for=\"(header, head) in allHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n          <td v-if=\"header.value !== 'username'\">{{header.value}}</td>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\" class=\"container-fluid\" >\r\n        <td v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" class=\"col\" :class=\"fieldName\" :id=\"fieldName\">\r\n          <div>\r\n            <textarea \r\n              v-if=\"fieldName !== 'username_id'\" :id=\"`${Client.id} ${fieldName}`\" v-bind:value=\"field\" :name=\"fieldName\" \r\n              @input=\"UpdateScrollHeight\" @change=\"CreateInput\"\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table> -->"]},"metadata":{},"sourceType":"module"}