{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  class: \"container fluid\"\n};\nvar _hoisted_2 = {\n  class: \"table table-sm table-striped\"\n};\nvar _hoisted_3 = [\"id\", \"name\"];\nvar _hoisted_4 = {\n  class: \"col-md-4\"\n};\nvar _hoisted_5 = {\n  class: \"table table-sm table-striped\"\n};\nvar _hoisted_6 = {\n  class: \"table-dark\"\n};\nvar _hoisted_7 = [\"id\"];\nvar _hoisted_8 = [\"value\", \"name\"];\nvar _hoisted_9 = [\"id\", \"name\"];\nvar _hoisted_10 = {\n  class: \"table table-sm table-striped\"\n};\nvar _hoisted_11 = {\n  class: \"table-dark\"\n};\nvar _hoisted_12 = [\"id\"];\nvar _hoisted_13 = [\"value\", \"name\"];\nvar _hoisted_14 = [\"id\", \"name\"];\nvar _hoisted_15 = {\n  class: \"table table-sm table-striped\"\n};\nvar _hoisted_16 = {\n  class: \"table-dark\"\n};\nvar _hoisted_17 = [\"id\"];\nvar _hoisted_18 = [\"value\", \"name\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_bankes = _resolveComponent(\"bankes\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_bankes), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" <div class=\\\"row\\\"> \"), _createElementVNode(\"table\", _hoisted_2, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.firstTableBody, function (Client) {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: Client.id,\n      id: Client.id,\n      name: Client.id\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", _hoisted_5, [_createElementVNode(\"thead\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.firstTableHeaders, function (header, head) {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: head,\n        class: _normalizeClass([\"col\", header.key])\n      }, [_createElementVNode(\"th\", null, _toDisplayString(header.value), 1\n      /* TEXT */\n      ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Client, function (field, fieldName) {\n        return _openBlock(), _createElementBlock(\"th\", {\n          class: _normalizeClass([\"cell\", {\n            'field__hidden': fieldName != header.key\n          }]),\n          key: fieldName,\n          id: fieldName\n        }, [_createElementVNode(\"textarea\", {\n          value: field,\n          name: fieldName\n        }, null, 8\n        /* PROPS */\n        , _hoisted_8)], 10\n        /* CLASS, PROPS */\n        , _hoisted_7);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))], 2\n      /* CLASS */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])])])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.secondTableBody, function (Client) {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"col-md-4\",\n        key: Client.id,\n        id: Client.id,\n        name: Client.id\n      }, [_createElementVNode(\"table\", _hoisted_10, [_createElementVNode(\"thead\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.secondTableHeaders, function (header, head) {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: head,\n          class: _normalizeClass([\"col\", header.key])\n        }, [_createElementVNode(\"th\", null, _toDisplayString(header.value), 1\n        /* TEXT */\n        ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Client, function (field, fieldName) {\n          return _openBlock(), _createElementBlock(\"th\", {\n            class: _normalizeClass([\"cell\", {\n              'field__hidden': fieldName != header.key\n            }]),\n            key: fieldName,\n            id: fieldName\n          }, [_createElementVNode(\"textarea\", {\n            value: field,\n            name: fieldName\n          }, null, 8\n          /* PROPS */\n          , _hoisted_13)], 10\n          /* CLASS, PROPS */\n          , _hoisted_12);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))], 2\n        /* CLASS */\n        );\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))])])], 8\n      /* PROPS */\n      , _hoisted_9);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))], 8\n    /* PROPS */\n    , _hoisted_3);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"td\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.thirdTableBody, function (Client) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col-md-4\",\n      key: Client.id,\n      id: Client.id,\n      name: Client.id\n    }, [_createElementVNode(\"table\", _hoisted_15, [_createElementVNode(\"thead\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.thirdTableHeaders, function (header, head) {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: head,\n        class: _normalizeClass([\"col\", header.key])\n      }, [_createElementVNode(\"th\", null, _toDisplayString(header.value), 1\n      /* TEXT */\n      ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Client, function (field, fieldName) {\n        return _openBlock(), _createElementBlock(\"th\", {\n          class: _normalizeClass([\"cell\", {\n            'field__hidden': fieldName != header.key\n          }]),\n          key: fieldName,\n          id: fieldName\n        }, [_createElementVNode(\"textarea\", {\n          value: field,\n          name: fieldName\n        }, null, 8\n        /* PROPS */\n        , _hoisted_18)], 10\n        /* CLASS, PROPS */\n        , _hoisted_17);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))], 2\n      /* CLASS */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])])], 8\n    /* PROPS */\n    , _hoisted_14);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]), _createCommentVNode(\" </div> \")])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createVNode","_component_bankes","_createElementVNode","_createCommentVNode","_createElementBlock","_Fragment","_renderList","_ctx","Client","key","id","name","header","head","_toDisplayString","value","field","fieldName"],"sourceRoot":"","sources":["C:\\current_front\\src\\components\\BodyTable.vue"],"sourcesContent":["<template>\r\n  <bankes/>\r\n  <div class=\"container fluid\">\r\n    <!-- <div class=\"row\"> -->\r\n      <table class=\"table table-sm table-striped\">\r\n        <tbody>\r\n          <tr v-for=\"Client in firstTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n            <td>\r\n              <div class=\"col-md-4\">\r\n                <table class=\"table table-sm table-striped\">\r\n                  <thead class=\"table-dark\">\r\n                    <tr v-for=\"(header, head) in firstTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                      <th>\r\n                        {{ header.value }}\r\n                      </th>\r\n                      <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                        <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                </table>\r\n              </div>\r\n            </td>\r\n\r\n            <div class=\"col-md-4\" v-for=\"Client in secondTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in secondTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\"/>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </tr>\r\n          \r\n          \r\n          <td>\r\n            <div class=\"col-md-4\" v-for=\"Client in thirdTableBody\" v-bind:key=\"Client.id\" :id=\"Client.id\" :name=\"Client.id\">\r\n              <table class=\"table table-sm table-striped\">\r\n                <thead class=\"table-dark\">\r\n                  <tr v-for=\"(header, head) in thirdTableHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n                    <th>\r\n                      {{ header.value }}\r\n                    </th>\r\n                    <th class=\"cell\" v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" :id=\"fieldName\" :class=\"{'field__hidden': fieldName != header.key}\">\r\n                      <textarea v-bind:value=\"field\" :name=\"fieldName\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </td>\r\n        </tbody>\r\n      </table>\r\n    <!-- </div> -->\r\n  </div>\r\n  \r\n</template>\r\n\r\n\r\n<script>\r\n  import bankes from '@/components/bankes.vue'\r\n  import { mapGetters, mapActions } from 'vuex'\r\n\r\n  let tableArray = ['firstTable', 'secondTable', 'thirdTable']\r\n\r\n  export default {\r\n      name: 'bodyTable',\r\n      data() {\r\n        return {\r\n          clientsPerPage: 1,\r\n          pageNumber: 1,\r\n          displayPages: 3,\r\n          tableArray\r\n        }\r\n      },\r\n      components: {\r\n        bankes,\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"firstTableHeaders\", \"secondTableHeaders\", \"thirdTableHeaders\", \"firstTableBody\", \"secondTableBody\", \"thirdTableBody\"]),\r\n\r\n        // pages () {\r\n        //   return Math.ceil(this.allClients.length / this.clientsPerPage)\r\n        // },\r\n        // paginatedClients () {\r\n        //   let from = (this.pageNumber -1) * this.clientsPerPage;\r\n        //   let to = from + this.clientsPerPage;\r\n        //   return this.allClients.slice(from, to);\r\n        // },\r\n        // displayingPages () {\r\n        //   let new_pages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n        //   let pageArray = []\r\n\r\n        //   for (let step = 1; step < new_pages; step++) {\r\n        //       if (step < this.displayPages + 1){\r\n        //         pageArray.push(step)\r\n        //       } else if (!pageArray.includes('...')) {\r\n        //         pageArray.push('...')\r\n        //       }\r\n        //   }\r\n        //   pageArray.push(new_pages)\r\n        //   return pageArray\r\n        // }\r\n      },\r\n      methods: mapActions(['websocketConnect']),\r\n      methods: {\r\n        UpdateScrollHeight (event) {\r\n          const currentTextareaField = document.getElementById(event.target.id);\r\n          currentTextareaField.style.cssText = `height: ${currentTextareaField, currentTextareaField.scrollHeight}px; overflow-y: hidden`;\r\n        },\r\n        clickPage (page) {\r\n          if (page !== '...'){\r\n            this.pageNumber = page;\r\n          } else {\r\n            this.displayingPages = Math.ceil(this.allClients.length / this.clientsPerPage)\r\n          }\r\n          \r\n        },\r\n      },\r\n      async mounted() {\r\n        this.$store.dispatch('websocketConnect');\r\n      }\r\n  }\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <table class=\"table table-sm table-striped\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th v-for=\"(header, head) in allHeaders\" :key=\"head\" class=\"col\" :class=\"header.key\">\r\n          <td v-if=\"header.value !== 'username'\">{{header.value}}</td>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr :name=\"Client.id\" v-for=\"Client in paginatedClients\" v-bind:key=\"Client.id\" :id=\"Client.id\" class=\"container-fluid\" >\r\n        <td v-for=\"(field, fieldName) in Client\" v-bind:key=\"fieldName\" class=\"col\" :class=\"fieldName\" :id=\"fieldName\">\r\n          <div>\r\n            <textarea \r\n              v-if=\"fieldName !== 'username_id'\" :id=\"`${Client.id} ${fieldName}`\" v-bind:value=\"field\" :name=\"fieldName\" \r\n              @input=\"UpdateScrollHeight\" @change=\"CreateInput\"\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table> -->\r\n  <!-- <div class=\"v-table__paginator\">\r\n    <div class=\"page\" \r\n        v-for=\"page in displayingPages\" :key=\"page\" :class=\"{'page__selected': page === pageNumber}\" @click=\"clickPage(page)\">\r\n          {{ page }}\r\n        </div>\r\n  </div> -->"]},"metadata":{},"sourceType":"module"}